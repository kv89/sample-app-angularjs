{"version":3,"sources":["webpack:///sampleapp.js","webpack:///./app/contacts/contacts.module.js","webpack:///./app/global/global.module.js","webpack:///./app/main/main.module.js","webpack:///./app/mymessages/mymessages.module.js","webpack:///./app/prefs/prefs.module.js","webpack:///./app/global/dialog.service.js","webpack:///./app/main/app.component.js","webpack:///./app/main/home.component.js","webpack:///./app/main/login.component.js","webpack:///./app/main/welcome.component.js","webpack:///./app/util/util.js","webpack:///./app/util/ga.js","webpack:///./app/bootstrap/bootstrap.js","webpack:///./app/bootstrap/ngmodule.js","webpack:///./app/contacts/contactDetail.component.js","webpack:///./app/contacts/contactList.component.js","webpack:///./app/contacts/contactView.component.js","webpack:///./app/contacts/contacts.component.js","webpack:///./app/contacts/contacts.states.js","webpack:///./app/contacts/editContact.component.js","webpack:///./app/global/appConfig.service.js","webpack:///./app/global/auth.service.js","webpack:///./app/global/dataSources.service.js","webpack:///./app/global/dialog.directive.js","webpack:///./app/global/requiresAuth.hook.js","webpack:///./app/main/app.states.js","webpack:///./app/mymessages/compose.component.js","webpack:///./app/mymessages/directives/folderList.component.js","webpack:///./app/mymessages/directives/messageTable.component.js","webpack:///./app/mymessages/directives/sortMessages.directive.js","webpack:///./app/mymessages/filters/messageBody.filter.js","webpack:///./app/mymessages/message.component.js","webpack:///./app/mymessages/messageList.component.js","webpack:///./app/mymessages/mymessages.component.js","webpack:///./app/mymessages/mymessages.states.js","webpack:///./app/mymessages/services/messagesListUI.service.js","webpack:///./app/prefs/prefs.component.js","webpack:///./app/prefs/prefs.states.js","webpack:///./app/util/sessionStorage.js"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Object","defineProperty","value","CONTACTS_MODULE","undefined","_contactDetail","_contactList","_contacts","_contactView","_editContact","_contacts2","angular","component","contactView","contacts","editContact","contactDetail","contactList","config","$stateRegistry","register","contactsState","newContactState","viewContactState","editContactState","GLOBAL_MODULE","_appConfig","_auth","_dataSources","_dialog","_dialog2","_requiresAuth","directive","dialog","service","AppConfig","AuthService","Contacts","Folders","Messages","DialogService","run","authHookRunBlock","MAIN_MODULE","_app","_welcome","_login","_home","_app2","$uiRouter","trace","enable","urlService","rules","otherwise","state","stateRegistry","appState","homeState","loginState","welcomeState","app","welcome","login","home","MYMESSAGES_MODULE","_compose","_folderList","_message","_messageList","_mymessages","_messageTable","_sortMessages","_messageBody","_messagesListUI","_mymessages2","sortMessages","compose","folderList","message","messageList","mymessages","messageTable","filter","messageBody","MessageListUI","composeState","messageState","messageListState","mymessagesState","PREFS_MODULE","_prefs","_prefs2","prefs","prefsState","_classCallCheck","instance","Constructor","TypeError","_angular","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","default","$document","$compile","$rootScope","this","body","find","elem","element","confirm","details","arguments","length","yesMsg","noMsg","extend","$new","append","data","finally","removeClass","remove","$inject","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","protoProps","staticProps","AuthedController","$state","emailAddress","isAuthenticated","logout","go","reload","glob","includes","controller","template","LoginController","_this","usernames","credentials","username","password","authenticating","returnToOriginalState","returnTo","params","options","assign","showError","errorMessage","authenticate","then","catch","bindings","pushToArr","setProp","val","array","item","push","guidChar","uniqReduce","arr","indexOf","flattenReduce","c","Math","floor","random","toString","toUpperCase","guid","split","map","join","_ngmodule","s","o","g","r","a","m","q","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","window","document","ga","ngmodule","$transitionsProvider","onBefore","$transition$","path","treeChanges","to","node","self","url","x","vpv","success","error","err","errType","type","replace","promise","_interopRequireDefault","_angularjs","_angularjs2","_stickyStates","_dsr","_visualizer","_oclazyload","_oclazyload2","_main","_global","name","plugin","StickyStatesPlugin","DSRPlugin","visualizer","contactsFutureState","lazyLoad","transition","$ocLazyLoad","injector","get","Promise","resolve","bind","ngmod","load","contact","parent","all","requiresAuth","deepStateRedirect","sticky","views","contactId","^.^.$default","pristineContact","EditContactController","copy","canExit","equals","first","last","_this2","save","sort","restDelay","fromJson","sessionStorage","getItem","Error","setItem","toJson","$q","$timeout","reject","validUsername","validPassword","authenticatedUser","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_sessionStorage","_SessionStorage","$http","getPrototypeOf","SessionStorage","_SessionStorage2","_SessionStorage3","folder","searchObject","_id","search","link","scope","addClass","yes","no","$transitions","requiresAuthCriteria","redirectToLogin","router","stateService","location","priority","redirectedFrom","targetState","from","redirectTo","ComposeController","pristineMessage","$stateParams","hasPrevious","date","read","gotoPreviousState","folders","messageTableController","colVisible","columns","messages","restrict","attrs","col","chevron","on","evt","$watch","newVal","toggleClass","$sce","msgText","trustAsHtml","p","_util","prefixSubject","prefix","subject","quoteMessage","makeResponseMsg","subjectPrefix","origMsg","MessageController","put","actions","reduce","action","replyMsg","fwdMsg","nextMessageId","nextMessageGetter","nextState","messageId","folderId","byFolder","messagelist","proximalMessageId","^.^.messagecontent","!$default.mymessages","$filter","sorted","idx","findIndex","msg","proximalIdx","PrefsController","clear","sessionStorageKey","sourceUrl","fromSession","_data","_idProp","_eqFn","JSON","parse","e","console","log","stripHashKey","resp","_commit","stringify","thenFn","exampleItem","contains","inString","matchesExample","example","keys","memo","items","id","_this3","post","_this4","eqFn","_this5","splice"],"mappings":"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","file":"sampleapp.js","sourcesContent":["webpackJsonp([0],Array(35).concat([\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CONTACTS_MODULE = undefined;\n\nvar _contactDetail = __webpack_require__(107);\n\nvar _contactList = __webpack_require__(108);\n\nvar _contacts = __webpack_require__(110);\n\nvar _contactView = __webpack_require__(109);\n\nvar _editContact = __webpack_require__(112);\n\nvar _contacts2 = __webpack_require__(111);\n\nvar CONTACTS_MODULE = exports.CONTACTS_MODULE = angular.module('contacts', []);\n\nCONTACTS_MODULE.component('contactView', _contactView.contactView);\nCONTACTS_MODULE.component('contacts', _contacts.contacts);\nCONTACTS_MODULE.component('editContact', _editContact.editContact);\nCONTACTS_MODULE.component('contactDetail', _contactDetail.contactDetail);\nCONTACTS_MODULE.component('contactList', _contactList.contactList);\n\nCONTACTS_MODULE.config(['$stateRegistryProvider', function ($stateRegistry) {\n  $stateRegistry.register(_contacts2.contactsState);\n  $stateRegistry.register(_contacts2.newContactState);\n  $stateRegistry.register(_contacts2.viewContactState);\n  $stateRegistry.register(_contacts2.editContactState);\n}]);\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GLOBAL_MODULE = undefined;\n\nvar _appConfig = __webpack_require__(113);\n\nvar _auth = __webpack_require__(114);\n\nvar _dataSources = __webpack_require__(115);\n\nvar _dialog = __webpack_require__(116);\n\nvar _dialog2 = __webpack_require__(68);\n\nvar _requiresAuth = __webpack_require__(117);\n\nvar GLOBAL_MODULE = exports.GLOBAL_MODULE = angular.module('global', []);\n\nGLOBAL_MODULE.directive('dialog', _dialog.dialog);\n\nGLOBAL_MODULE.service('AppConfig', _appConfig.AppConfig);\nGLOBAL_MODULE.service('AuthService', _auth.AuthService);\nGLOBAL_MODULE.service('Contacts', _dataSources.Contacts);\nGLOBAL_MODULE.service('Folders', _dataSources.Folders);\nGLOBAL_MODULE.service('Messages', _dataSources.Messages);\nGLOBAL_MODULE.service('DialogService', _dialog2.DialogService);\n\nGLOBAL_MODULE.run(_requiresAuth.authHookRunBlock);\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MAIN_MODULE = undefined;\n\nvar _app = __webpack_require__(69);\n\nvar _welcome = __webpack_require__(72);\n\nvar _login = __webpack_require__(71);\n\nvar _home = __webpack_require__(70);\n\nvar _app2 = __webpack_require__(118);\n\nvar MAIN_MODULE = exports.MAIN_MODULE = angular.module('main', []);\n\nMAIN_MODULE.config(['$uiRouterProvider', function ($uiRouter) {\n  // Enable tracing of each TRANSITION... (check the javascript console)\n  // This syntax `$trace.enable(1)` is an alternative to `$trace.enable(\"TRANSITION\")`.\n  // Besides \"TRANSITION\", you can also enable tracing for : \"RESOLVE\", \"HOOK\", \"INVOKE\", \"UIVIEW\", \"VIEWCONFIG\"\n  $uiRouter.trace.enable(1);\n\n  // If the user enters a URL that doesn't match any known URL (state), send them to `/welcome`\n  var $urlService = $uiRouter.urlService;\n  $urlService.rules.otherwise({ state: 'welcome' });\n\n  var $stateRegistry = $uiRouter.stateRegistry;\n  $stateRegistry.register(_app2.appState);\n  $stateRegistry.register(_app2.homeState);\n  $stateRegistry.register(_app2.loginState);\n  $stateRegistry.register(_app2.welcomeState);\n}]);\n\nMAIN_MODULE.component('app', _app.app);\nMAIN_MODULE.component('welcome', _welcome.welcome);\nMAIN_MODULE.component('login', _login.login);\nMAIN_MODULE.component('home', _home.home);\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MYMESSAGES_MODULE = undefined;\n\nvar _compose = __webpack_require__(119);\n\nvar _folderList = __webpack_require__(120);\n\nvar _message = __webpack_require__(124);\n\nvar _messageList = __webpack_require__(125);\n\nvar _mymessages = __webpack_require__(126);\n\nvar _messageTable = __webpack_require__(121);\n\nvar _sortMessages = __webpack_require__(122);\n\nvar _messageBody = __webpack_require__(123);\n\nvar _messagesListUI = __webpack_require__(128);\n\nvar _mymessages2 = __webpack_require__(127);\n\nvar MYMESSAGES_MODULE = exports.MYMESSAGES_MODULE = angular.module('mymessages', []);\n\nMYMESSAGES_MODULE.directive('sortMessages', _sortMessages.sortMessages);\n\nMYMESSAGES_MODULE.component('compose', _compose.compose);\nMYMESSAGES_MODULE.component('folderList', _folderList.folderList);\nMYMESSAGES_MODULE.component('message', _message.message);\nMYMESSAGES_MODULE.component('messageList', _messageList.messageList);\nMYMESSAGES_MODULE.component('mymessages', _mymessages.mymessages);\nMYMESSAGES_MODULE.component('messageTable', _messageTable.messageTable);\n\nMYMESSAGES_MODULE.filter('messageBody', _messageBody.messageBody);\n\nMYMESSAGES_MODULE.service('MessageListUI', _messagesListUI.MessageListUI);\n\nMYMESSAGES_MODULE.config(['$stateRegistryProvider', function ($stateRegistry) {\n  $stateRegistry.register(_mymessages2.composeState);\n  $stateRegistry.register(_mymessages2.messageState);\n  $stateRegistry.register(_mymessages2.messageListState);\n  $stateRegistry.register(_mymessages2.mymessagesState);\n}]);\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PREFS_MODULE = undefined;\n\nvar _prefs = __webpack_require__(129);\n\nvar _prefs2 = __webpack_require__(130);\n\nvar PREFS_MODULE = exports.PREFS_MODULE = angular.module('prefs', []);\n\nPREFS_MODULE.component('prefs', _prefs.prefs);\n\nPREFS_MODULE.config(['$stateRegistryProvider', function ($stateRegistry) {\n  $stateRegistry.register(_prefs2.prefsState);\n}]);\n\n/***/ }),\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DialogService = undefined;\n\nvar _angular = __webpack_require__(11);\n\nvar angular = _interopRequireWildcard(_angular);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DialogService = exports.DialogService = function DialogService($document, $compile, $rootScope) {\n  _classCallCheck(this, DialogService);\n\n  var body = $document.find(\"body\");\n  var elem = angular.element(\"<div class='dialog' dialog='opts'></div>\");\n\n  this.confirm = function (message) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Are you sure?\";\n    var yesMsg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Yes\";\n    var noMsg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"No\";\n\n    $compile(elem)(angular.extend($rootScope.$new(), { message: message, details: details, yesMsg: yesMsg, noMsg: noMsg }));\n    body.append(elem);\n    return elem.data(\"promise\").finally(function () {\n      return elem.removeClass('active').remove();\n    });\n  };\n};\n\nDialogService.$inject = ['$document', '$compile', '$rootScope'];\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The controller for the `app` component.\n */\nvar AuthedController = function () {\n  function AuthedController(AppConfig, AuthService, $state) {\n    _classCallCheck(this, AuthedController);\n\n    this.AuthService = AuthService;\n    this.$state = $state;\n\n    this.emailAddress = AppConfig.emailAddress;\n    this.isAuthenticated = AuthService.isAuthenticated();\n  }\n\n  _createClass(AuthedController, [{\n    key: 'logout',\n    value: function logout() {\n      var AuthService = this.AuthService,\n          $state = this.$state;\n\n      AuthService.logout();\n      // Reload states after authentication change\n      return $state.go('welcome', {}, { reload: true });\n    }\n  }, {\n    key: 'isActive',\n    value: function isActive(glob) {\n      return this.$state.includes(glob);\n    }\n  }]);\n\n  return AuthedController;\n}();\n\nAuthedController.$inject = ['AppConfig', 'AuthService', '$state'];\n\n/**\n * This is the main app component for an authenticated user.\n * \n * This component renders the outermost chrome (application header and tabs, the compose  and logout button)\n * It has a `ui-view` viewport for nested states to fill in.\n */\nvar app = exports.app = {\n  controller: AuthedController,\n  template: '\\n    <div class=\"navheader\">\\n      <ul ng-if=\"::$ctrl.isAuthenticated\" class=\"nav nav-tabs\">\\n    \\n        <li ui-sref-active=\"active\"> <a ui-sref=\"mymessages\" role=\"button\"> Messages </a> </li>\\n        <li ui-sref-active=\"active\"> <a ui-sref=\"contacts\" role=\"button\"> Contacts </a> </li>\\n        <li ui-sref-active=\"active\"> <a ui-sref=\"prefs\" role=\"button\"> Preferences </a> </li>\\n    \\n        <li class=\"navbar-right\">\\n          <button class=\"btn btn-primary fa fa-home\" ui-sref=\"home\"></button>\\n          <button style=\"margin-right: 15px;\" class=\"btn btn-primary\" ui-sref=\"mymessages.compose\"><i class=\"fa fa-envelope\"></i> New Message</button>\\n        </li>\\n    \\n        <li class=\"navbar-text navbar-right logged-in-user\" style=\"margin: 0.5em 1.5em;\">\\n          <div>\\n            {{::$ctrl.emailAddress}} <i class=\"fa fa-chevron-down\"></i>\\n            <div class=\"hoverdrop\">\\n              <button class=\"btn btn-primary\" ng-click=\"$ctrl.logout()\">Log Out</button>\\n            </div>\\n          </div>\\n        </li>\\n    \\n      </ul>\\n    </div>\\n    \\n    <div ui-view></div>\\n    <div ui-view=\"mymessages\" ng-show=\"$ctrl.isActive(\\'mymessages.**\\')\"></div>\\n    <div ui-view=\"contacts\" ng-show=\"$ctrl.isActive(\\'contacts.**\\')\"></div>\\n'\n};\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// This is a home component for authenticated users.\n// It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\nvar home = exports.home = {\n  template: \"\\n    <div class=\\\"home buttons\\\">\\n      <button ui-sref=\\\"mymessages\\\" class=\\\"btn btn-primary\\\">\\n        <h1><i class=\\\"fa fa-envelope\\\"></i></h1>\\n        <h1>Messages</h1>\\n      </button>\\n\\n      <button ui-sref=\\\"contacts\\\" class=\\\"btn btn-primary\\\">\\n      <h1><i class=\\\"fa fa-users\\\"></i></h1>\\n      <h1>Contacts</h1>\\n      </button>\\n\\n      <button ui-sref=\\\"prefs\\\" class=\\\"btn btn-primary\\\">\\n        <h1><i class=\\\"fa fa-cogs\\\"></i></h1>\\n        <h1>Preferences</h1>\\n      </button>\\n    </div>\\n\" };\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The controller for the `login` component\n *\n * The `login` method validates the credentials.\n * Then it sends the user back to the `returnTo` state, which is provided as a resolve data.\n */\nvar LoginController = function LoginController(AppConfig, AuthService, $state) {\n  var _this = this;\n\n  _classCallCheck(this, LoginController);\n\n  this.usernames = AuthService.usernames;\n\n  this.credentials = {\n    username: AppConfig.emailAddress,\n    password: 'password'\n  };\n\n  this.login = function (credentials) {\n    _this.authenticating = true;\n\n    var returnToOriginalState = function returnToOriginalState() {\n      var state = _this.returnTo.state();\n      var params = _this.returnTo.params();\n      var options = Object.assign({}, _this.returnTo.options(), { reload: true });\n      $state.go(state, params, options);\n    };\n\n    var showError = function showError(errorMessage) {\n      return _this.errorMessage = errorMessage;\n    };\n\n    AuthService.authenticate(credentials.username, credentials.password).then(returnToOriginalState).catch(showError).finally(function () {\n      return _this.authenticating = false;\n    });\n  };\n};\n\nLoginController.$inject = ['AppConfig', 'AuthService', '$state'];\n\n/**\n * This component renders a faux authentication UI\n *\n * It prompts for the username/password (and gives hints with bouncy arrows)\n * It shows errors if the authentication failed for any reason.\n */\nvar login = exports.login = {\n  bindings: { returnTo: '<' },\n\n  controller: LoginController,\n\n  template: '\\n    <div class=\"container\">\\n      <div class=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\\n        <h3>Log In</h3>\\n        <p>(This login screen is for demonstration only... just pick a username, enter \\'password\\' and click <b>\"Log in\"</b>)</p>\\n        <hr>\\n    \\n        <div>\\n          <label for=\"username\">Username:</label>\\n          <select class=\"form-control\" name=\"username\" id=\"username\"\\n            ng-model=\"$ctrl.credentials.username\" ng-options=\"username for username in $ctrl.usernames\"></select>\\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 10em; height: 0\"\\n              ng-hide=\"$ctrl.credentials.username\" class=\"fa fa-arrow-left bounce-horizontal\"> Choose </i>\\n        </div>\\n        <br>\\n    \\n        <div>\\n          <label for=\"password\">Password:</label>\\n          <input class=\"form-control\" type=\"password\" name=\"password\" ng-model=\"$ctrl.credentials.password\">\\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 5em; height: 0\"\\n              ng-hide=\"!$ctrl.credentials.username || $ctrl.credentials.password == \\'password\\'\" class=\"fa fa-arrow-left bounce-horizontal\">\\n            Enter \\'<b>password</b>\\' here\\n          </i>\\n        </div>\\n    \\n        <div ng-show=\"$ctrl.errorMessage\" class=\"well error\">{{ $ctrl.errorMessage }}</div>\\n    \\n        <hr>\\n        <div>\\n          <button class=\"btn btn-primary\" type=\"button\"\\n              ng-disabled=\"$ctrl.authenticating\" ng-click=\"$ctrl.login($ctrl.credentials)\">\\n            <i class=\"fa fa-spin fa-spinner\" ng-show=\"$ctrl.authenticating\"></i> <span>Log in</span>\\n          </button>\\n          <i ng-show=\"$ctrl.credentials.username && $ctrl.credentials.password == \\'password\\'\" style=\"position: relative;\" class=\"fa fa-arrow-left bounce-horizontal\"> Click Me!</i>\\n      </div>\\n    </div>\\n    '\n};\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar welcome = exports.welcome = {\n  template: \"\\n    <div class=\\\"container-fluid\\\">\\n    \\n      <h3>UI-Router Sample App</h3>\\n    \\n      <p>Welcome to the sample app!</p>\\n      <p>This is a demonstration app intended to highlight some patterns that can be used within UI-Router.\\n        These patterns should help you to to build cohesive, robust apps.  Additionally, this app uses state-vis\\n        to show the tree of states, and a transition log visualizer.</p>\\n    \\n      <h4>App Overview</h4>\\n      <p>\\n        First, start exploring the application's functionality at a high level by activating\\n        one of the three submodules: Messages, Contacts, or Preferences. If you are not already logged in,\\n        you will be taken to an authentication screen (the authentication is fake; the password is \\\"password\\\")\\n        <div>\\n          <button class=\\\"btn btn-primary\\\" ui-sref=\\\"mymessages\\\"><i class=\\\"fa fa-envelope\\\"></i><span>Messages</span></button>\\n          <button class=\\\"btn btn-primary\\\" ui-sref=\\\"contacts\\\"><i class=\\\"fa fa-users\\\"></i><span>Contacts</span></button>\\n          <button class=\\\"btn btn-primary\\\" ui-sref=\\\"prefs\\\"><i class=\\\"fa fa-cogs\\\"></i><span>Preferences</span></button>\\n        </div>\\n      </p>\\n    \\n      <h4>Patterns and Recipes</h4>\\n      <ul>\\n        <li>Require Authentication</li>\\n        <li>Previous State</li>\\n        <li>Redirect Hook</li>\\n        <li>Default Param Values</li>\\n      </ul>\\n    </div>\"\n};\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/** Some utility functions used by the application */\n\nvar setProp = exports.setProp = function setProp(obj, key, val) {\n  obj[key] = val;return obj;\n};\nvar pushToArr = exports.pushToArr = function pushToArr(array, item) {\n  array.push(item);return array;\n};\nvar uniqReduce = exports.uniqReduce = function uniqReduce(arr, item) {\n  return arr.indexOf(item) !== -1 ? arr : pushToArr(arr, item);\n};\nvar flattenReduce = exports.flattenReduce = function flattenReduce(arr, item) {\n  return arr.concat(item);\n};\nvar guidChar = function guidChar(c) {\n  return c !== 'x' && c !== 'y' ? '-' : Math.floor(Math.random() * 16).toString(16).toUpperCase();\n};\nvar guid = exports.guid = function guid() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\").map(guidChar).join(\"\");\n};\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ngmodule = __webpack_require__(106);\n\n/** Google analytics */\n\n(function (i, s, o, g, r, a, m) {\n  i['GoogleAnalyticsObject'] = r;i[r] = i[r] || function () {\n    (i[r].q = i[r].q || []).push(arguments);\n  }, i[r].l = 1 * new Date();a = s.createElement(o), m = s.getElementsByTagName(o)[0];a.async = 1;a.src = g;m.parentNode.insertBefore(a, m);\n})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\nga('create', 'UA-73329341-1', 'auto');\nga('send', 'pageview');\n\n_ngmodule.ngmodule.config(['$transitionsProvider', function ($transitionsProvider) {\n  $transitionsProvider.onBefore({}, function ($transition$) {\n    var path = $transition$.treeChanges().to.map(function (node) {\n      return node.state.self.url;\n    }).filter(function (x) {\n      return x != null && x !== '^';\n    }).join('');\n\n    var vpv = function vpv(path) {\n      return ga('send', 'pageview', path);\n    };\n\n    var success = function success() {\n      vpv(path);\n    };\n    var error = function error(err) {\n      var errType = err && err.hasOwnProperty(\"type\") ? err.type : '_';\n      path = path.replace(/^\\//, \"\");\n      vpv('/errors/' + errType + '/' + path);\n    };\n\n    $transition$.promise.then(success, error);\n  });\n}]);\n\n/***/ }),\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(36);\n\n__webpack_require__(37);\n\n__webpack_require__(35);\n\n__webpack_require__(38);\n\n__webpack_require__(39);\n\n__webpack_require__(74);\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ngmodule = undefined;\n\nvar _angular = __webpack_require__(11);\n\nvar angular = _interopRequireWildcard(_angular);\n\nvar _angularjs = __webpack_require__(31);\n\nvar _angularjs2 = _interopRequireDefault(_angularjs);\n\nvar _stickyStates = __webpack_require__(33);\n\nvar _dsr = __webpack_require__(32);\n\nvar _visualizer = __webpack_require__(34);\n\nvar _oclazyload = __webpack_require__(40);\n\nvar _oclazyload2 = _interopRequireDefault(_oclazyload);\n\nvar _main = __webpack_require__(37);\n\nvar _global = __webpack_require__(36);\n\nvar _mymessages = __webpack_require__(38);\n\nvar _prefs = __webpack_require__(39);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Create the angular module \"demo\".\n//\n// Since it is exported, other parts of the application (in other files) can then import it and register things.\n// In bootstrap.js, the module is imported, and the components, services, and states are registered.\n/**\n * This file imports the third party library dependencies, then creates the angular module \"demo\"\n * and exports it.\n */\n// External dependencies\nvar ngmodule = exports.ngmodule = angular.module(\"demo\", [_angularjs2.default, _oclazyload2.default,\n// CONTACTS_MODULE.name // lazy loaded below\n_main.MAIN_MODULE.name, _global.GLOBAL_MODULE.name, _mymessages.MYMESSAGES_MODULE.name, _prefs.PREFS_MODULE.name]);\n\nngmodule.config(['$uiRouterProvider', function ($uiRouter) {\n  $uiRouter.plugin(_stickyStates.StickyStatesPlugin);\n  $uiRouter.plugin(_dsr.DSRPlugin);\n  // Show the UI-Router Visualizer\n  (0, _visualizer.visualizer)($uiRouter);\n\n  // Future State (Placeholder) for the contacts module\n  var contactsFutureState = {\n    name: 'contacts.**',\n    url: '/contacts',\n    lazyLoad: function lazyLoad(transition) {\n      var $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n      return new Promise(function(resolve) { resolve(); }).then(__webpack_require__.bind(null, 35)).then(function (ngmod) {\n        return $ocLazyLoad.load(ngmod.CONTACTS_MODULE);\n      });\n    }\n  };\n\n  $uiRouter.stateRegistry.register(contactsFutureState);\n}]);\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This component renders a read only view of the details for a single contact. \n */\nvar contactDetail = exports.contactDetail = {\n  bindings: { contact: '<' },\n\n  template: '\\n    <div class=\"flex-h\">\\n      <div class=\"details\">\\n        <h3>{{$ctrl.contact.name.first}} {{$ctrl.contact.name.last}}</h3>\\n        <div><label>Company</label><div>{{$ctrl.contact.company}}</div></div>\\n        <div><label>Age</label><div>{{$ctrl.contact.age}}</div></div>\\n        <div><label>Phone</label><div>{{$ctrl.contact.phone}}</div></div>\\n        <div><label>Email</label><div>{{$ctrl.contact.email}}</div></div>\\n        <div class=\"flex-h\">\\n          <label>Address</label>\\n          <div>{{$ctrl.contact.address.street}}<br>\\n                {{$ctrl.contact.address.city}}, {{$ctrl.contact.address.state}} {{$ctrl.contact.address.zip}}\\n          </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\"flex nogrow\">\\n        <img ng-src=\"{{$ctrl.contact.picture}}\"/>\\n      </div>\\n    </div>\\n'\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This component renders a list of contacts.\n * \n * At the top is a \"new contact\" button.\n * Each list item is a clickable link to the `contacts.contact` details substate\n */\nvar contactList = exports.contactList = {\n  bindings: { contacts: '<' },\n\n  template: '\\n    <ul class=\"selectlist list-unstyled flex nogrow\">\\n      <li>\\n        <!-- This link is a relative ui-sref to the contacts.new state. -->\\n        <a ui-sref=\".new\">\\n          <button class=\"btn btn-primary\">\\n            <i class=\"fa fa-pencil\"></i><span>New Contact</span>\\n          </button>\\n        </a>\\n      </li>\\n  \\n      <li>&nbsp;</li>\\n  \\n      <!-- Highlight the selected contact:\\n          When the current state matches the ui-sref\\'s state (and its parameters)\\n          ui-sref-active applies the \\'selected\\' class to the li element -->\\n      <li ng-repeat=\"contact in $ctrl.contacts\" ui-sref-active=\"selected\">\\n        <a ui-sref=\".contact({contactId: contact._id})\">\\n          {{contact.name.first}} {{contact.name.last}}\\n        </a>\\n      </li>\\n    </ul>\\n'\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This component renders details for a single contact\n * \n * A button messages the contact by linking to `mymessages.compose` state passing the email as a state parameter.\n * Another button edits the contact by linking to `contacts.contact.edit` state.\n */\n\nvar contactView = exports.contactView = {\n  bindings: { contact: '<' },\n\n  template: '\\n    <div class=\"contact\">\\n    \\n      <contact-detail contact=\"$ctrl.contact\"></contact-detail>\\n      \\n      <!-- This button has an ui-sref to the mymessages.compose state. The ui-sref provides the mymessages.compose\\n           state with an non-url parameter, which is used as the initial message model -->\\n      <button class=\"btn btn-primary\" ui-sref=\"mymessages.compose({ message: { to: $ctrl.contact.email } })\">\\n        <i class=\"fa fa-envelope\"></i><span>Message</span>\\n      </button>\\n    \\n      <!-- This button has a relative ui-sref to the contacts.contact.edit state. -->\\n      <button class=\"btn btn-primary\" ui-sref=\".edit\">\\n        <i class=\"fa fa-pencil\"></i><span>Edit Contact</span>\\n      </button>\\n      \\n    </div>\\n' };\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This component renders the contacts submodule.\n * \n * On the left is the list of contacts.\n * On the right is the ui-view viewport where contact details appear.\n */\nvar contacts = exports.contacts = {\n  bindings: { contacts: '<' },\n\n  template: '\\n    <div class=\"my-contacts flex-h\">\\n    \\n      <contact-list contacts=\"$ctrl.contacts\" class=\"flex nogrow\"></contact-list>\\n    \\n      <div ui-view>\\n        <!-- This default content is displayed when the ui-view is not filled in by a child state -->\\n        <h4 style=\"margin: 1em 2em;\">Select a contact</h4>\\n      </div>\\n      \\n    </div>'\n};\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.newContactState = exports.editContactState = exports.viewContactState = exports.contactsState = undefined;\n\n__webpack_require__(68);\n\n/**\n * This state displays the contact list.\n * It also provides a nested ui-view (viewport) for child states to fill in.\n *\n * The contacts are fetched using a resolve.\n */\nvar contactsState = exports.contactsState = {\n  parent: 'app', // declares that 'contacts' is a child of 'app'\n  name: \"contacts\",\n  url: \"/contacts\",\n  resolve: {\n    // Resolve all the contacts.  The resolved contacts are injected into the controller.\n    contacts: ['Contacts', function (Contacts) {\n      return Contacts.all();\n    }]\n  },\n  data: { requiresAuth: true },\n  deepStateRedirect: true,\n  sticky: true,\n  views: {\n    contacts: 'contacts'\n  }\n};\n\n/**\n * This state displays a single contact.\n * The contact to display is fetched using a resolve, based on the `contactId` parameter.\n */\nvar viewContactState = exports.viewContactState = {\n  name: 'contacts.contact',\n  url: '/:contactId',\n  resolve: {\n    // Resolve the contact, based on the contactId parameter value.\n    // The resolved contact is provided to the contactComponent's contact binding\n    contact: ['Contacts', '$transition$', function (Contacts, $transition$) {\n      return Contacts.get($transition$.params().contactId);\n    }]\n  },\n  component: 'contactView'\n};\n\n/**\n * This state allows a user to edit a contact\n *\n * The contact data to edit is injected from the parent state's resolve.\n *\n * This state uses view targeting to replace the parent ui-view (which would normally be filled\n * by 'contacts.contact') with the edit contact template/controller\n */\nvar editContactState = exports.editContactState = {\n  name: 'contacts.contact.edit',\n  url: '/edit',\n  views: {\n    // Relatively target the grand-parent-state's $default (unnamed) ui-view\n    // This could also have been written using ui-view@state addressing: $default@contacts\n    // Or, this could also have been written using absolute ui-view addressing: !$default.$default.$default\n    '^.^.$default': {\n      bindings: { pristineContact: \"contact\" },\n      component: 'editContact'\n    }\n  }\n};\n\n/**\n * This state allows a user to create a new contact\n *\n * The contact data to edit is injected into the component from the parent state's resolve.\n */\nvar newContactState = exports.newContactState = {\n  name: 'contacts.new',\n  url: '/new',\n  component: 'editContact'\n};\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The controller for the editContact component\n *\n * This component is used by both `contacts.contact.edit` and `contacts.new` states.\n *\n * The component makes a copy of the contqct data for editing.\n * The new copy and original (pristine) copy are used to determine if the contact is \"dirty\" or not.\n * If the user navigates to some other state while the contact is \"dirty\", the `uiCanExit` component\n * hook asks the user to confirm navigation away, losing any edits.\n *\n * The Delete Contact button is wired to the `remove` method, which:\n * - asks for confirmation from the user\n * - deletes the resource from REST API\n * - navigates back to the contacts grandparent state using relative addressing `^.^`\n *   the `reload: true` option re-fetches the contacts list from the server\n *\n * The Save Contact button is wired to the `save` method which:\n * - saves the REST resource (PUT or POST, depending)\n * - navigates back to the parent state using relative addressing `^`.\n *   when editing an existing contact, this returns to the `contacts.contact` \"view contact\" state\n *   when creating a new contact, this returns to the `contacts` list.\n *   the `reload: true` option re-fetches the contacts resolve data from the server\n */\nvar EditContactController = function () {\n  function EditContactController($state, DialogService, Contacts) {\n    _classCallCheck(this, EditContactController);\n\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Contacts = Contacts;\n  }\n\n  _createClass(EditContactController, [{\n    key: '$onInit',\n    value: function $onInit() {\n      // Make an editable copy of the pristineContact\n      this.contact = angular.copy(this.pristineContact);\n    }\n  }, {\n    key: 'uiCanExit',\n    value: function uiCanExit() {\n      if (this.canExit || angular.equals(this.contact, this.pristineContact)) {\n        return true;\n      }\n\n      var message = 'You have unsaved changes to this contact.';\n      var question = 'Navigate away and lose changes?';\n      return this.DialogService.confirm(message, question);\n    }\n\n    /** Ask for confirmation, then delete the contact, then go to the grandparent state ('contacts') */\n\n  }, {\n    key: 'remove',\n    value: function remove(contact) {\n      var _this = this;\n\n      this.DialogService.confirm('Delete contact: ' + contact.name.first + ' ' + contact.name.last).then(function () {\n        return _this.Contacts.remove(contact);\n      }).then(function () {\n        return _this.canExit = true;\n      }).then(function () {\n        return _this.$state.go(\"^.^\", null, { reload: true });\n      });\n    }\n\n    /** Save the contact, then go to the grandparent state ('contacts') */\n\n  }, {\n    key: 'save',\n    value: function save(contact) {\n      var _this2 = this;\n\n      this.Contacts.save(contact).then(function () {\n        return _this2.canExit = true;\n      }).then(function () {\n        return _this2.$state.go(\"^\", null, { reload: true });\n      });\n    }\n  }]);\n\n  return EditContactController;\n}();\n\nEditContactController.$inject = ['$state', 'DialogService', 'Contacts'];\n\n/**\n * This component edits a single contact.\n *\n * Editable fields are bound to the contact.\n * A button cancels editing and returns to the contact view by linking to the parent state using `^` relative addressing.\n * Another button saves the contact.\n * A third button deletes the bcontact.\n */\nvar editContact = exports.editContact = {\n  bindings: { pristineContact: '<' },\n\n  controller: EditContactController,\n\n  template: '\\n    <div class=\"contact\">\\n      <div class=\"details\">\\n        <div><label>First</label>   <input type=\"text\" ng-model=\"$ctrl.contact.name.first\"></div>\\n        <div><label>Last</label>    <input type=\"text\" ng-model=\"$ctrl.contact.name.last\"></div>\\n        <div><label>Company</label> <input type=\"text\" ng-model=\"$ctrl.contact.company\"></div>\\n        <div><label>Age</label>     <input type=\"text\" ng-model=\"$ctrl.contact.age\"></div>\\n        <div><label>Phone</label>   <input type=\"text\" ng-model=\"$ctrl.contact.phone\"></div>\\n        <div><label>Email</label>   <input type=\"text\" ng-model=\"$ctrl.contact.email\"></div>\\n        <div><label>Street</label>  <input type=\"text\" ng-model=\"$ctrl.contact.address.street\"></div>\\n        <div><label>City</label>    <input type=\"text\" ng-model=\"$ctrl.contact.address.city\"> </div>\\n        <div><label>State</label>   <input type=\"text\" ng-model=\"$ctrl.contact.address.state\"></div>\\n        <div><label>Zip</label>     <input type=\"text\" ng-model=\"$ctrl.contact.address.zip\"></div>\\n        <div><label>Image</label>   <input type=\"text\" ng-model=\"$ctrl.contact.picture\"></div>\\n      </div>\\n    \\n      <hr>\\n    \\n      <div>\\n        <!-- This button\\'s ui-sref relatively targets the parent state, i.e., contacts.contact -->\\n        <button class=\"btn btn-primary\" ui-sref=\"^\"><i class=\"fa fa-close\"></i><span>Cancel</span></button>\\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.contact)\"><i class=\"fa fa-save\"></i><span>Save</span></button>\\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.remove($ctrl.contact)\"><i class=\"fa fa-close\"></i><span>Delete</span></button>\\n      </div>\\n    </div>\\n' };\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This service stores and retrieves user preferences in session storage\n */\nvar AppConfig = exports.AppConfig = function () {\n  function AppConfig() {\n    _classCallCheck(this, AppConfig);\n\n    this.sort = '+date';\n    this.emailAddress = undefined;\n    this.restDelay = 100;\n    this.load();\n  }\n\n  _createClass(AppConfig, [{\n    key: \"load\",\n    value: function load() {\n      try {\n        return angular.extend(this, angular.fromJson(sessionStorage.getItem(\"appConfig\")));\n      } catch (Error) {}\n\n      return this;\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      sessionStorage.setItem(\"appConfig\", angular.toJson(angular.extend({}, this)));\n    }\n  }]);\n\n  return AppConfig;\n}();\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This service emulates an Authentication Service.\n */\nvar AuthService = exports.AuthService = function () {\n  function AuthService(AppConfig, $q, $timeout) {\n    _classCallCheck(this, AuthService);\n\n    this.AppConfig = AppConfig;\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.usernames = ['myself@angular.dev', 'devgal@angular.dev', 'devguy@angular.dev'];\n  }\n\n  /**\n   * Returns true if the user is currently authenticated, else false\n   */\n\n\n  _createClass(AuthService, [{\n    key: 'isAuthenticated',\n    value: function isAuthenticated() {\n      return !!this.AppConfig.emailAddress;\n    }\n\n    /**\n     * Fake authentication function that returns a promise that is either resolved or rejected.\n     *\n     * Given a username and password, checks that the username matches one of the known\n     * usernames (this.usernames), and that the password matches 'password'.\n     *\n     * Delays 800ms to simulate an async REST API delay.\n     */\n\n  }, {\n    key: 'authenticate',\n    value: function authenticate(username, password) {\n      var _this = this;\n\n      var $timeout = this.$timeout,\n          $q = this.$q,\n          AppConfig = this.AppConfig;\n\n      // checks if the username is one of the known usernames, and the password is 'password'\n\n      var checkCredentials = function checkCredentials() {\n        return $q(function (resolve, reject) {\n          var validUsername = _this.usernames.indexOf(username) !== -1;\n          var validPassword = password === 'password';\n\n          return validUsername && validPassword ? resolve(username) : reject(\"Invalid username or password\");\n        });\n      };\n\n      return $timeout(checkCredentials, 800).then(function (authenticatedUser) {\n        AppConfig.emailAddress = authenticatedUser;\n        AppConfig.save();\n      });\n    }\n\n    /** Logs the current user out */\n\n  }, {\n    key: 'logout',\n    value: function logout() {\n      this.AppConfig.emailAddress = undefined;\n      this.AppConfig.save();\n    }\n  }]);\n\n  return AuthService;\n}();\n\nAuthService.$inject = ['AppConfig', '$q', '$timeout'];\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Messages = exports.Folders = exports.Contacts = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _sessionStorage = __webpack_require__(131);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Fake REST Services (Contacts, Folders, Messages) used in the mymessages submodule.\n *\n * Each of these APIs have:\n *\n * .all()\n * .search(exampleItem)\n * .get(id)\n * .save(item)\n * .post(item)\n * .put(item)\n * .remove(item)\n *\n * See ../util/sessionStorage.js for more details, if curious\n */\n\n/** A fake Contacts REST client API */\nvar Contacts = exports.Contacts = function (_SessionStorage) {\n  _inherits(Contacts, _SessionStorage);\n\n  function Contacts($http, $timeout, $q, AppConfig) {\n    _classCallCheck(this, Contacts);\n\n    // http://beta.json-generator.com/api/json/get/V1g6UwwGx\n    return _possibleConstructorReturn(this, (Contacts.__proto__ || Object.getPrototypeOf(Contacts)).call(this, $http, $timeout, $q, \"contacts\", \"data/contacts.json\", AppConfig));\n  }\n\n  return Contacts;\n}(_sessionStorage.SessionStorage);\n\nContacts.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Folders REST client API */\n\nvar Folders = exports.Folders = function (_SessionStorage2) {\n  _inherits(Folders, _SessionStorage2);\n\n  function Folders($http, $timeout, $q, AppConfig) {\n    _classCallCheck(this, Folders);\n\n    return _possibleConstructorReturn(this, (Folders.__proto__ || Object.getPrototypeOf(Folders)).call(this, $http, $timeout, $q, 'folders', 'data/folders.json', AppConfig));\n  }\n\n  return Folders;\n}(_sessionStorage.SessionStorage);\n\nFolders.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Messages REST client API */\n\nvar Messages = exports.Messages = function (_SessionStorage3) {\n  _inherits(Messages, _SessionStorage3);\n\n  function Messages($http, $timeout, $q, AppConfig) {\n    _classCallCheck(this, Messages);\n\n    // http://beta.json-generator.com/api/json/get/VJl5GbIze\n    return _possibleConstructorReturn(this, (Messages.__proto__ || Object.getPrototypeOf(Messages)).call(this, $http, $timeout, $q, 'messages', 'data/messages.json', AppConfig));\n  }\n\n  _createClass(Messages, [{\n    key: \"byFolder\",\n    value: function byFolder(folder) {\n      var searchObject = { folder: folder._id };\n      var toFromAttr = [\"drafts\", \"sent\"].indexOf(folder._id) !== -1 ? \"from\" : \"to\";\n      searchObject[toFromAttr] = this.AppConfig.emailAddress;\n      return this.search(searchObject);\n    }\n  }]);\n\n  return Messages;\n}(_sessionStorage.SessionStorage);\n\nMessages.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dialog = dialog;\ndialog.$inject = ['$timeout', '$q'];\nfunction dialog($timeout, $q) {\n  return {\n    link: function link(scope, elem) {\n      $timeout(function () {\n        return elem.addClass('active');\n      });\n      elem.data('promise', $q(function (resolve, reject) {\n        scope.yes = function () {\n          return resolve(true);\n        };\n        scope.no = function () {\n          return reject(false);\n        };\n      }));\n    },\n    template: '\\n      <div class=\"backdrop\"></div>\\n      <div class=\\'wrapper\\'>\\n        <div class=\"content\">\\n          <h4 ng-show=\"message\">{{message}}</h4>\\n          <div ng-show=\"details\">{{details}}</div>\\n    \\n          <div style=\"padding-top: 1em;\">\\n            <button class=\"btn btn-primary\" ng-click=\"yes()\">{{yesMsg}}</button>\\n            <button class=\"btn btn-primary\" ng-click=\"no()\">{{noMsg}}</button>\\n          </div>\\n        </div>\\n      </div>\\n'\n  };\n}\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authHookRunBlock = authHookRunBlock;\n/**\n * This run block registers a Transition Hook which protects\n * routes that requires authentication.\n *\n * This hook redirects to /login when both:\n * - The user is not authenticated\n * - The user is navigating to a state that requires authentication\n */\nauthHookRunBlock.$inject = ['$transitions', 'AuthService'];\nfunction authHookRunBlock($transitions, AuthService) {\n  // Matches if the destination state's data property has a truthy 'requiresAuth' property\n  var requiresAuthCriteria = {\n    to: function to(state) {\n      return state.data && state.data.requiresAuth;\n    }\n  };\n\n  // Function that returns a redirect for the current transition to the login state\n  // if the user is not currently authenticated (according to the AuthService)\n\n  var redirectToLogin = function redirectToLogin(transition) {\n    var AuthService = transition.injector().get('AuthService');\n    var $state = transition.router.stateService;\n    if (!AuthService.isAuthenticated()) {\n      return $state.target('login', undefined, { location: false });\n    }\n  };\n\n  // Register the \"requires auth\" hook with the TransitionsService\n  $transitions.onBefore(requiresAuthCriteria, redirectToLogin, { priority: 10 });\n}\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loginState = exports.homeState = exports.welcomeState = exports.appState = undefined;\n\nvar _app = __webpack_require__(69);\n\nvar _welcome = __webpack_require__(72);\n\nvar _home = __webpack_require__(70);\n\nvar _login = __webpack_require__(71);\n\n/**\n * This is the parent state for the entire application.\n *\n * This state's primary purposes are:\n * 1) Shows the outermost chrome (including the navigation and logout for authenticated users)\n * 2) Provide a viewport (ui-view) for a substate to plug into\n */\nvar appState = exports.appState = {\n  name: 'app',\n  redirectTo: 'welcome',\n  component: 'app'\n};\n\n/**\n * This is the 'welcome' state.  It is the default state (as defined by app.js) if no other state\n * can be matched to the URL.\n */\nvar welcomeState = exports.welcomeState = {\n  parent: 'app',\n  name: 'welcome',\n  url: '/welcome',\n  component: 'welcome'\n};\n\n/**\n * This is a home screen for authenticated users.\n *\n * It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\n */\nvar homeState = exports.homeState = {\n  parent: 'app',\n  name: 'home',\n  url: '/home',\n  component: 'home'\n};\n\n/**\n * This is the login state.  It is activated when the user navigates to /login, or if a unauthenticated\n * user attempts to access a protected state (or substate) which requires authentication. (see routerhooks/requiresAuth.js)\n *\n * It shows a fake login dialog and prompts the user to authenticate.  Once the user authenticates, it then\n * reactivates the state that the user originally came from.\n */\nvar loginState = exports.loginState = {\n  parent: 'app',\n  name: 'login',\n  url: '/login',\n  component: 'login',\n  resolve: { returnTo: returnTo }\n};\n\n/**\n * A resolve function for 'login' state which figures out what state to return to, after a successful login.\n *\n * If the user was initially redirected to login state (due to the requiresAuth redirect), then return the toState/params\n * they were redirected from.  Otherwise, if they transitioned directly, return the fromState/params.  Otherwise\n * return the main \"home\" state.\n */\nreturnTo.$inject = ['$transition$'];\nfunction returnTo($transition$) {\n  if ($transition$.redirectedFrom() != null) {\n    // The user was redirected to the login state (e.g., via the requiresAuth hook when trying to activate contacts)\n    // Return to the original attempted target state (e.g., contacts)\n    return $transition$.redirectedFrom().targetState();\n  }\n\n  var $state = $transition$.router.stateService;\n\n  // The user was not redirected to the login state; they directly activated the login state somehow.\n  // Return them to the state they came from.\n  if ($transition$.from().name !== '') {\n    return $state.target($transition$.from(), $transition$.params(\"from\"));\n  }\n\n  // If the fromState's name is empty, then this was the initial transition. Just return them to the home state\n  return $state.target('home');\n}\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The controller for the Compose component\n */\nvar ComposeController = function () {\n  function ComposeController($state, DialogService, AppConfig, Messages) {\n    _classCallCheck(this, ComposeController);\n\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.AppConfig = AppConfig;\n    this.Messages = Messages;\n  }\n\n  /**\n   * Create our message's model using the current user's email address as 'message.from'\n   * Then extend it with all the properties from (non-url) state parameter 'message'.\n   * Keep two copies: the editable one and the original one.\n   * These copies are used to check if the message is dirty.\n   */\n\n\n  _createClass(ComposeController, [{\n    key: '$onInit',\n    value: function $onInit() {\n      this.pristineMessage = angular.extend({ from: this.AppConfig.emailAddress }, this.$stateParams.message);\n      this.message = angular.copy(this.pristineMessage);\n    }\n\n    /**\n     * Checks if the edited copy and the pristine copy are identical when the state is changing.\n     * If they are not identical, the allows the user to confirm navigating away without saving.\n     */\n\n  }, {\n    key: 'uiCanExit',\n    value: function uiCanExit() {\n      if (this.canExit || angular.equals(this.pristineMessage, this.message)) {\n        return true;\n      }\n\n      var message = 'You have not saved this message.';\n      var question = 'Navigate away and lose changes?';\n      return this.DialogService.confirm(message, question, \"Yes\", \"No\");\n    }\n\n    /**\n     * Navigates back to the previous state.\n     *\n     * - Checks the $transition$ which activated this controller for a 'from state' that isn't the implicit root state.\n     * - If there is no previous state (because the user deep-linked in, etc), then go to 'mymessages.messagelist'\n     */\n\n  }, {\n    key: 'gotoPreviousState',\n    value: function gotoPreviousState() {\n      var $transition$ = this.$transition$;\n      var hasPrevious = !!$transition$.from().name;\n      var state = hasPrevious ? $transition$.from() : \"mymessages.messagelist\";\n      var params = hasPrevious ? $transition$.params(\"from\") : {};\n      this.$state.go(state, params);\n    }\n  }, {\n    key: 'send',\n\n\n    /** \"Send\" the message (save to the 'sent' folder), and then go to the previous state */\n    value: function send(message) {\n      var _this = this;\n\n      this.Messages.save(angular.extend(message, { date: new Date(), read: true, folder: 'sent' })).then(function () {\n        return _this.canExit = true;\n      }).then(function () {\n        return _this.gotoPreviousState();\n      });\n    }\n  }, {\n    key: 'save',\n\n\n    /** Save the message to the 'drafts' folder, and then go to the previous state */\n    value: function save(message) {\n      var _this2 = this;\n\n      this.Messages.save(angular.extend(message, { date: new Date(), read: true, folder: 'drafts' })).then(function () {\n        return _this2.canExit = true;\n      }).then(function () {\n        return _this2.gotoPreviousState();\n      });\n    }\n  }]);\n\n  return ComposeController;\n}();\n\nComposeController.$inject = ['$state', 'DialogService', 'AppConfig', 'Messages'];\n\n/**\n * This component composes a message\n *\n * The message might be new, a saved draft, or a reply/forward.\n * A Cancel button discards the new message and returns to the previous state.\n * A Save As Draft button saves the message to the \"drafts\" folder.\n * A Send button sends the message\n */\nvar compose = exports.compose = {\n  bindings: { $stateParams: '<', $transition$: '<' },\n\n  controller: ComposeController,\n\n  template: '\\n    <div class=\"compose\">\\n      <div class=\"header\">\\n        <div class=\"flex-h\"> <label>Recipient</label> <input type=\"text\" id=\"to\" name=\"to\" ng-model=\"$ctrl.message.to\"> </div>\\n        <div class=\"flex-h\"> <label>Subject</label> <input type=\"text\" id=\"subject\" name=\"subject\" ng-model=\"$ctrl.message.subject\"> </div>\\n      </div>\\n    \\n      <div class=\"body\">\\n        <textarea name=\"body\" id=\"body\" ng-model=\"$ctrl.message.body\" cols=\"30\" rows=\"20\"></textarea>\\n        \\n        <div class=\"buttons\">\\n          <!-- Clicking this button brings the user back to the state they came from (previous state) -->\\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.gotoPreviousState()\"><i class=\"fa fa-times-circle-o\"></i><span>Cancel</span></button>\\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.message)\"><i class=\"fa fa-save\"></i><span>Save as Draft</span></button>\\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.send($ctrl.message)\"><i class=\"fa fa-paper-plane-o\"></i><span>Send</span></button>\\n        </div>\\n      </div>\\n    </div>\\n'\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Renders a list of folders\n */\nvar folderList = exports.folderList = {\n  bindings: { folders: '<' },\n\n  template: '\\n    <!-- Renders a list of folders -->\\n    <div class=\"folderlist\">\\n      <ul class=\"selectlist list-unstyled\">\\n  \\n        <!-- Highlight the selected folder:\\n            When the current state matches the ui-sref\\'s state (and its parameters)\\n            ui-sref-active applies the \\'selected\\' class to the li element -->\\n        <li class=\"folder\" ui-sref-active=\"selected\" ng-repeat=\"folder in $ctrl.folders\" >\\n          <!-- This ui-sref is a relative link to the \\'mymessages.messagelist\\' substate. It provides the\\n              \\'folderId\\' parameter value from the current folder\\'s .id property -->\\n          <a ui-sref=\".messagelist({folderId: folder._id})\"><i class=\"fa\"></i>{{folder._id}}</a>\\n        </li>\\n      </ul>\\n    </div>\\n' };\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A component that displays a folder of messages as a table\n * \n * If a row is clicked, the details of the message is shown using a relative ui-sref to `.message`.\n * \n * ui-sref-active is used to highlight the selected row.\n * \n * Shows/hides specific columns based on the `columns` input binding.\n */\nvar messageTable = exports.messageTable = {\n  bindings: { columns: '<', messages: '<' },\n\n  controller: messageTableController,\n\n  template: '\\n    <table>\\n      <thead>\\n        <tr>\\n          <td ng-if=\"::$ctrl.colVisible(\\'read\\')\"></td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'from\\')\"     sort-messages=\"from\">Sender</td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'to\\')\"       sort-messages=\"to\">Recipient</td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'subject\\')\"  sort-messages=\"subject\">Subject</td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'date\\')\"     sort-messages=\"date\">Date</td>\\n        </tr>\\n      </thead>\\n  \\n      <tbody>\\n        <tr ng-repeat=\"message in $ctrl.messages | orderBy: $ctrl.AppConfig.sort track by message._id\"\\n            ui-sref=\".message({messageId: message._id})\" ui-sref-active=\"active\">\\n          <td ng-if=\"::$ctrl.colVisible(\\'read\\')\"><i class=\"fa fa-circle\" style=\"font-size: 50%\" ng-show=\"!message.read\"></td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'from\\')\">{{ message.from }}</td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'to\\')\">{{ message.to }}</td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'subject\\')\">{{ message.subject }}</td>\\n          <td ng-if=\"::$ctrl.colVisible(\\'date\\')\">{{ message.date | date: \"yyyy-MM-dd\" }}</td>\\n        </tr>\\n      </tbody>\\n  \\n    </table>\\n' };\n\nmessageTableController.$inject = ['AppConfig'];\nfunction messageTableController(AppConfig) {\n  var _this = this;\n\n  this.AppConfig = AppConfig;\n  this.colVisible = function (name) {\n    return _this.columns.indexOf(name) !== -1;\n  };\n}\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortMessages = sortMessages;\n/**\n * A directive (for a table header) which changes the app's sort order\n */\nsortMessages.$inject = ['AppConfig'];\nfunction sortMessages(AppConfig) {\n  return {\n    restrict: 'A',\n    link: function link(scope, elem, attrs) {\n      var col = attrs.sortMessages;\n      if (!col) return;\n      var chevron = angular.element(\"<i style='padding-left: 0.25em' class='fa'></i>\");\n      elem.append(chevron);\n\n      elem.on(\"click\", function (evt) {\n        return AppConfig.sort = AppConfig.sort === '+' + col ? '-' + col : '+' + col;\n      });\n      scope.$watch(function () {\n        return AppConfig.sort;\n      }, function (newVal) {\n        chevron.toggleClass(\"fa-sort-asc\", newVal == '+' + col);\n        chevron.toggleClass(\"fa-sort-desc\", newVal == '-' + col);\n      });\n    }\n  };\n}\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.messageBody = messageBody;\n/** Angular filter to format fake emails as HTML*/\nmessageBody.$inject = ['$sce'];\nfunction messageBody($sce) {\n  return function () {\n    var msgText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return $sce.trustAsHtml(msgText.split(/\\n/).map(function (p) {\n      return '<p>' + p + '</p>';\n    }).join('\\n'));\n  };\n}\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.message = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(73);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** Helper function to prefix a message with \"fwd: \" or \"re: \" */\nvar prefixSubject = function prefixSubject(prefix, message) {\n  return prefix + message.subject;\n};\n/** Helper function which quotes an email message */\nvar quoteMessage = function quoteMessage(message) {\n  return \"\\n\\n\\n\\n---------------------------------------\\nOriginal message:\\nFrom: \" + message.from + \"\\nDate: \" + message.date + \"\\nSubject: \" + message.subject + \"\\n\\n\" + message.body;\n};\n\n/** Helper function to make a response message object */\nvar makeResponseMsg = function makeResponseMsg(subjectPrefix, origMsg) {\n  return {\n    from: origMsg.to,\n    to: origMsg.from,\n    subject: prefixSubject(subjectPrefix, origMsg),\n    body: quoteMessage(origMsg)\n  };\n};\n\n/**\n * The controller for the Message component\n */\n\nvar MessageController = function () {\n  function MessageController($state, DialogService, Messages) {\n    _classCallCheck(this, MessageController);\n\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Messages = Messages;\n  }\n\n  /**\n   * When the user views a message, mark it as read and save (PUT) the resource.\n   *\n   * Apply the available actions for the message, depending on the folder the message belongs to.\n   */\n\n\n  _createClass(MessageController, [{\n    key: \"$onInit\",\n    value: function $onInit() {\n      this.message.read = true;\n      this.Messages.put(this.message);\n\n      this.actions = this.folder.actions.reduce(function (obj, action) {\n        return (0, _util.setProp)(obj, action, true);\n      }, {});\n    }\n\n    /**\n     * Compose a new message as a reply to this one\n     */\n\n  }, {\n    key: \"reply\",\n    value: function reply(message) {\n      var replyMsg = makeResponseMsg(\"Re: \", message);\n      this.$state.go('mymessages.compose', { message: replyMsg });\n    }\n  }, {\n    key: \"forward\",\n\n\n    /**\n     * Compose a new message as a forward of this one.\n     */\n    value: function forward(message) {\n      var fwdMsg = makeResponseMsg(\"Fwd: \", message);\n      delete fwdMsg.to;\n      this.$state.go('mymessages.compose', { message: fwdMsg });\n    }\n  }, {\n    key: \"editDraft\",\n\n\n    /**\n     * Continue composing this (draft) message\n     */\n    value: function editDraft(message) {\n      this.$state.go('mymessages.compose', { message: message });\n    }\n  }, {\n    key: \"remove\",\n\n\n    /**\n     * Delete this message.\n     *\n     * - confirm deletion\n     * - delete the message\n     * - determine which message should be active\n     * - show that message\n     */\n    value: function remove(message) {\n      var _this = this;\n\n      var nextMessageId = this.nextMessageGetter(message._id);\n      var nextState = nextMessageId ? 'mymessages.messagelist.message' : 'mymessages.messagelist';\n      var params = { messageId: nextMessageId };\n\n      this.DialogService.confirm(\"Delete?\", undefined).then(function () {\n        return _this.Messages.remove(message);\n      }).then(function () {\n        return _this.$state.go(nextState, params, { reload: 'mymessages.messagelist' });\n      });\n    }\n  }]);\n\n  return MessageController;\n}();\n\nMessageController.$inject = ['$state', 'DialogService', 'Messages'];\n\n/**\n * This component renders a single message\n *\n * Buttons perform actions related to the message.\n * Buttons are shown/hidden based on the folder's context.\n * For instance, a \"draft\" message can be edited, but can't be replied to.\n */\nvar message = exports.message = {\n  bindings: { folder: '<', message: '<', nextMessageGetter: '<' },\n\n  controller: MessageController,\n\n  template: \"\\n    <div class=\\\"message\\\">\\n    \\n      <div class=\\\"header\\\">\\n        <div>\\n          <h4>{{$ctrl.message.subject}}</h4>\\n          <h5>{{$ctrl.message.from}} <i class=\\\"fa fa-long-arrow-right\\\"></i> {{$ctrl.message.to}}</h5>\\n        </div>\\n    \\n        <div class=\\\"line2\\\">\\n          <div>{{$ctrl.message.date | date: 'longDate'}} {{$ctrl.message.date | date: 'mediumTime'}}</div>\\n          <div>\\n            <button class=\\\"btn btn-primary\\\" ng-show=\\\"$ctrl.actions.edit\\\" ng-click=\\\"$ctrl.editDraft($ctrl.message)\\\"><i class=\\\"fa fa-pencil\\\"></i> <span>Edit Draft</span></button>\\n            <button class=\\\"btn btn-primary\\\" ng-show=\\\"$ctrl.actions.reply\\\" ng-click=\\\"$ctrl.reply($ctrl.message)\\\"><i class=\\\"fa fa-reply\\\"></i> <span>Reply</span></button>\\n            <button class=\\\"btn btn-primary\\\" ng-show=\\\"$ctrl.actions.forward\\\" ng-click=\\\"$ctrl.forward($ctrl.message)\\\"><i class=\\\"fa fa-forward\\\" ></i> <span>Forward</span></button>\\n            <button class=\\\"btn btn-primary\\\" ng-show=\\\"$ctrl.actions.delete\\\" ng-click=\\\"$ctrl.remove($ctrl.message)\\\"><i class=\\\"fa fa-close\\\"></i> <span>Delete</span></button>\\n          </div>\\n        </div>\\n      </div>\\n    \\n      <!-- Pass the raw (plain text) message body through the messageBody filter to format slightly nicer. -->\\n      <div class=\\\"body\\\" ng-bind-html=\\\"::$ctrl.message.body | messageBody\\\"></div>\\n    </div>\\n\" };\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This component renders a list of messages using the `messageTable` component\n */\nvar messageList = exports.messageList = {\n  bindings: { folder: '<', messages: '<' },\n  template: '\\n    <div class=\"messages\">\\n      <message-table columns=\"$ctrl.folder.columns\" messages=\"$ctrl.messages\"></message-table>\\n    </div>\\n' };\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The main mymessages component.\n *\n * Renders a list of folders, and has two viewports:\n * - messageList: filled with the list of messages for a folder\n * - messagecontent: filled with the contents of a single message.\n */\nvar mymessages = exports.mymessages = {\n  bindings: { folders: '<' },\n\n  template: '\\n    <div class=\"my-messages\">\\n    \\n      <!-- Show message folders -->\\n      <folder-list folders=\"$ctrl.folders\"></folder-list>\\n    \\n      <!-- A named view for the list of messages in this folder.  This will be  filled in by the \\'mymessages.messagelist\\' child state -->\\n      <div ui-view=\"messagelist\" class=\"messagelist\"> </div>\\n    \\n    </div>\\n    \\n    <!-- A named ui-view for a message\\'s contents.  The \\'mymessages.messagelist.message\\' grandchild state plugs into this ui-view -->\\n    <div ui-view=\"messagecontent\"></div>\\n' };\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * The mymessages state. This is the main state for the mymessages submodule.\n *\n * This state shows the list of folders for the current user. It retrieves the folders from the\n * Folders service.  If a user navigates directly to this state, the state redirects to the 'mymessages.messagelist'.\n */\nvar mymessagesState = exports.mymessagesState = {\n  parent: 'app',\n  name: \"mymessages\",\n  url: \"/mymessages\",\n  resolve: {\n    // All the folders are fetched from the Folders service\n    folders: ['Folders', function (Folders) {\n      return Folders.all();\n    }]\n  },\n  views: {\n    mymessages: 'mymessages'\n  },\n  // Mark this state as requiring authentication.  See ../routerhooks/requiresAuth.js.\n  data: { requiresAuth: true },\n  // If mymessages state is directly activated, redirect the transition to the most recent\n  // child state that was previously activated, or 'mymessages.messagelist' (by default)\n  deepStateRedirect: {\n    default: { state: 'mymessages.messagelist' }\n  },\n  sticky: true\n};\n\n/**\n * This state shows the contents (a message list) of a single folder\n */\nvar messageListState = exports.messageListState = {\n  name: 'mymessages.messagelist',\n  url: '/:folderId',\n  // The folderId parameter is part of the URL.  This params block sets 'inbox' as the default value.\n  // If no parameter value for folderId is provided on the transition, then it will be defaulted to 'inbox'\n  params: { folderId: \"inbox\" },\n  resolve: {\n    // Fetch the current folder from the Folders service, using the folderId parameter\n    folder: ['Folders', '$stateParams', function (Folders, $stateParams) {\n      return Folders.get($stateParams.folderId);\n    }],\n\n    // The resolved folder object (from the resolve above) is injected into this resolve\n    // The list of message for the folder are fetched from the Messages service\n    messages: ['Messages', 'folder', function (Messages, folder) {\n      return Messages.byFolder(folder);\n    }]\n  },\n  views: {\n    // This targets the \"messagelist\" named ui-view added to the DOM in the parent state 'mymessages'\n    messagelist: 'messageList'\n  }\n};\n\n/**\n * This state shows the contents of a single message.\n * It also has UI to reply, forward, delete, or edit an existing draft.\n */\nvar messageState = exports.messageState = {\n  name: 'mymessages.messagelist.message',\n  url: '/:messageId',\n  resolve: {\n    // Fetch the message from the Messages service using the messageId parameter\n    message: ['Messages', '$stateParams', function (Messages, $stateParams) {\n      return Messages.get($stateParams.messageId);\n    }],\n    // Provide the component with a function it can query that returns the closest message id\n    nextMessageGetter: ['MessageListUI', 'messages', function (MessageListUI, messages) {\n      return MessageListUI.proximalMessageId.bind(MessageListUI, messages);\n    }]\n  },\n  views: {\n    // Relatively target the parent-state's parent-state's 'messagecontent' ui-view\n    // This could also have been written using ui-view@state addressing: 'messagecontent@mymessages'\n    // Or, this could also have been written using absolute ui-view addressing: '!$default.mymessages.messagecontent'\n    \"^.^.messagecontent\": 'message'\n  }\n};\n\n/**\n * This state allows the user to compose a new message, edit a drafted message, send a message,\n * or save an unsent message as a draft.\n *\n * This state uses view-targeting to take over the ui-view that would normally be filled by the 'mymessages' state.\n */\nvar composeState = exports.composeState = {\n  name: 'mymessages.compose',\n  url: '/compose',\n  // Declares that this state has a 'message' parameter, that defaults to an empty object.\n  // Note the parameter does not appear in the URL.\n  params: {\n    message: {}\n  },\n  views: {\n    // Absolutely targets the ui-view named 'mymessages' (which is nested inside an unnamed ui-view) with the 'compose' component.\n    // Absolute targeting finds the nested ui-view in the DOM, using view names.\n    '!$default.mymessages': 'compose'\n  }\n};\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** Provides services related to a message list */\nvar MessageListUI = exports.MessageListUI = function () {\n  function MessageListUI($filter, AppConfig) {\n    _classCallCheck(this, MessageListUI);\n\n    this.$filter = $filter;\n    this.AppConfig = AppConfig;\n  }\n\n  /** This is a UI helper which finds the nearest messageId in the messages list to the messageId parameter */\n\n\n  _createClass(MessageListUI, [{\n    key: 'proximalMessageId',\n    value: function proximalMessageId(messages, messageId) {\n      var sorted = this.$filter(\"orderBy\")(messages, this.AppConfig.sort);\n      var idx = sorted.findIndex(function (msg) {\n        return msg._id === messageId;\n      });\n      var proximalIdx = sorted.length > idx + 1 ? idx + 1 : idx - 1;\n      return proximalIdx >= 0 ? sorted[proximalIdx]._id : undefined;\n    }\n  }]);\n\n  return MessageListUI;\n}();\n\nMessageListUI.$inject = ['$filter', 'AppConfig'];\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * The controller for the prefs component.\n */\nvar PrefsController = function () {\n  function PrefsController(AppConfig) {\n    _classCallCheck(this, PrefsController);\n\n    this.AppConfig = AppConfig;\n  }\n\n  _createClass(PrefsController, [{\n    key: '$onInit',\n    value: function $onInit() {\n      this.prefs = {\n        restDelay: this.AppConfig.restDelay\n      };\n    }\n\n    /** Clear out the session storage */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      sessionStorage.clear();\n      document.location.reload(true);\n    }\n\n    /** After saving preferences to session storage, reload the entire application */\n\n  }, {\n    key: 'savePrefs',\n    value: function savePrefs() {\n      angular.extend(this.AppConfig, { restDelay: this.prefs.restDelay }).save();\n      document.location.reload(true);\n    }\n  }]);\n\n  return PrefsController;\n}();\n\nPrefsController.$inject = ['AppConfig'];\n\n/**\n * A component which shows and updates app preferences\n */\nvar prefs = exports.prefs = {\n  controller: PrefsController,\n\n  template: '\\n    <div>\\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.reset()\"><i class=\"fa fa-recycle\"></i> <span>Reset All Data</span></button>\\n    </div>\\n    \\n    <div>\\n      <label for=\"restDelay\">Simulated REST API delay (ms)</label>\\n      <input type=\"text\" name=\"restDelay\" ng-model=\"$ctrl.prefs.restDelay\">\\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.savePrefs()\">Save</button>\\n    </div>\\n' };\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * This state allows the user to set their application preferences\n */\nvar prefsState = exports.prefsState = {\n  parent: 'app',\n  name: 'prefs',\n  url: '/prefs',\n  component: 'prefs',\n  // Mark this state as requiring authentication.  See ../global/requiresAuth.hook.js.\n  data: { requiresAuth: true }\n};\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SessionStorage = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(73);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This class simulates a RESTful resource, but the API calls fetch data from\n * Session Storage instead of an HTTP call.\n *\n * Once configured, it loads the initial (pristine) data from the URL provided (using HTTP).\n * It exposes GET/PUT/POST/DELETE-like API that operates on the data.  All the data is also\n * stored in Session Storage.  If any data is modified in memory, session storage is updated.\n * If the browser is refreshed, the SessionStorage object will try to fetch the existing data from\n * the session, before falling back to re-fetching the initial data using HTTP.\n *\n * For an example, please see dataSources.js\n */\nvar SessionStorage = exports.SessionStorage = function () {\n  /**\n   * Creates a new SessionStorage object\n   *\n   * @param $http Pass in the $http service\n   * @param $timeout Pass in the $timeout service\n   * @param $q Pass in the $q service\n   * @param sessionStorageKey The session storage key. The data will be stored in browser's session storage under this key.\n   * @param sourceUrl The url that contains the initial data.\n   * @param AppConfig Pass in the AppConfig object\n   */\n  function SessionStorage($http, $timeout, $q, sessionStorageKey, sourceUrl, AppConfig) {\n    var _this = this;\n\n    _classCallCheck(this, SessionStorage);\n\n    var data = void 0,\n        fromSession = sessionStorage.getItem(sessionStorageKey);\n    // A promise for *all* of the data.\n    this._data = undefined;\n\n    // For each data object, the _idProp defines which property has that object's unique identifier\n    this._idProp = \"_id\";\n\n    // A basic triple-equals equality checker for two values\n    this._eqFn = function (l, r) {\n      return l[_this._idProp] === r[_this._idProp];\n    };\n\n    // Services required to implement the fake REST API\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.sessionStorageKey = sessionStorageKey;\n    this.AppConfig = AppConfig; // Used to get the REST latency simulator,\n\n    if (fromSession) {\n      try {\n        // Try to parse the existing data from the Session Storage API\n        data = JSON.parse(fromSession);\n      } catch (e) {\n        console.log(\"Unable to parse session messages, retrieving intial data.\");\n      }\n    }\n\n    var stripHashKey = function stripHashKey(obj) {\n      return (0, _util.setProp)(obj, '$$hashKey', undefined);\n    };\n\n    // Create a promise for the data; Either the existing data from session storage, or the initial data via $http request\n    this._data = (data ? $q.resolve(data) : $http.get(sourceUrl).then(function (resp) {\n      return resp.data;\n    })).then(this._commit.bind(this)).then(function () {\n      return JSON.parse(sessionStorage.getItem(sessionStorageKey));\n    }).then(function (array) {\n      return array.map(stripHashKey);\n    });\n  }\n\n  /** Saves all the data back to the session storage */\n\n\n  _createClass(SessionStorage, [{\n    key: \"_commit\",\n    value: function _commit(data) {\n      sessionStorage.setItem(this.sessionStorageKey, JSON.stringify(data));\n      return this.$q.resolve(data);\n    }\n\n    /** Helper which simulates a delay, then provides the `thenFn` with the data */\n\n  }, {\n    key: \"all\",\n    value: function all(thenFn) {\n      var _this2 = this;\n\n      return this.$timeout(function () {\n        return _this2._data;\n      }, this.AppConfig.restDelay).then(thenFn);\n    }\n\n    /** Given a sample item, returns a promise for all the data for items which have the same properties as the sample */\n\n  }, {\n    key: \"search\",\n    value: function search(exampleItem) {\n      var contains = function contains(search, inString) {\n        return (\"\" + inString).indexOf(\"\" + search) !== -1;\n      };\n      var matchesExample = function matchesExample(example, item) {\n        return Object.keys(example).reduce(function (memo, key) {\n          return memo && contains(example[key], item[key]);\n        }, true);\n      };\n      return this.all(function (items) {\n        return items.filter(matchesExample.bind(null, exampleItem));\n      });\n    }\n\n    /** Returns a promise for the item with the given identifier */\n\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      var _this3 = this;\n\n      return this.all(function (items) {\n        return items.find(function (item) {\n          return item[_this3._idProp] === id;\n        });\n      });\n    }\n\n    /** Returns a promise to save the item.  It delegates to put() or post() if the object has or does not have an identifier set */\n\n  }, {\n    key: \"save\",\n    value: function save(item) {\n      return item[this._idProp] ? this.put(item) : this.post(item);\n    }\n\n    /** Returns a promise to save (POST) a new item.   The item's identifier is auto-assigned. */\n\n  }, {\n    key: \"post\",\n    value: function post(item) {\n      item[this._idProp] = (0, _util.guid)();\n      return this.all(function (items) {\n        return (0, _util.pushToArr)(items, item);\n      }).then(this._commit.bind(this));\n    }\n\n    /** Returns a promise to save (PUT) an existing item. */\n\n  }, {\n    key: \"put\",\n    value: function put(item) {\n      var _this4 = this;\n\n      var eqFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._eqFn;\n\n      return this.all(function (items) {\n        var idx = items.findIndex(eqFn.bind(null, item));\n        if (idx === -1) throw Error(item + \" not found in \" + _this4);\n        items[idx] = item;\n        return _this4._commit(items).then(function () {\n          return item;\n        });\n      });\n    }\n\n    /** Returns a promise to remove (DELETE) an item. */\n\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var _this5 = this;\n\n      var eqFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._eqFn;\n\n      return this.all(function (items) {\n        var idx = items.findIndex(eqFn.bind(null, item));\n        if (idx === -1) throw Error(item + \" not found in \" + _this5);\n        items.splice(idx, 1);\n        return _this5._commit(items).then(function () {\n          return item;\n        });\n      });\n    }\n  }]);\n\n  return SessionStorage;\n}();\n\nSessionStorage.$inject = ['$http', '$timeout', '$q', 'sessionStorageKey', 'sourceUrl', 'AppConfig'];\n\n/***/ })\n]),[105]);\n\n\n// WEBPACK FOOTER //\n// sampleapp.js","import {contactDetail} from \"./contactDetail.component\";\nimport {contactList} from \"./contactList.component\";\nimport {contacts} from \"./contacts.component\";\nimport {contactView} from \"./contactView.component\";\nimport {editContact} from \"./editContact.component\";\n\nimport {contactsState, editContactState, newContactState, viewContactState} from \"./contacts.states\";\n\nexport const CONTACTS_MODULE = angular.module('contacts', []);\n\nCONTACTS_MODULE.component('contactView', contactView);\nCONTACTS_MODULE.component('contacts', contacts);\nCONTACTS_MODULE.component('editContact', editContact);\nCONTACTS_MODULE.component('contactDetail', contactDetail);\nCONTACTS_MODULE.component('contactList', contactList);\n\nCONTACTS_MODULE.config(['$stateRegistryProvider', function($stateRegistry) {\n  $stateRegistry.register(contactsState);\n  $stateRegistry.register(newContactState);\n  $stateRegistry.register(viewContactState);\n  $stateRegistry.register(editContactState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.module.js","import {AppConfig} from \"./appConfig.service\";\nimport {AuthService} from \"./auth.service\";\nimport {Contacts, Folders, Messages} from \"./dataSources.service\";\nimport {dialog} from \"./dialog.directive\";\nimport {DialogService} from \"./dialog.service\";\nimport {authHookRunBlock} from \"./requiresAuth.hook\";\n\nexport const GLOBAL_MODULE = angular.module('global', []);\n\nGLOBAL_MODULE.directive('dialog', dialog);\n\nGLOBAL_MODULE.service('AppConfig', AppConfig);\nGLOBAL_MODULE.service('AuthService', AuthService);\nGLOBAL_MODULE.service('Contacts', Contacts);\nGLOBAL_MODULE.service('Folders', Folders);\nGLOBAL_MODULE.service('Messages', Messages);\nGLOBAL_MODULE.service('DialogService', DialogService);\n\nGLOBAL_MODULE.run(authHookRunBlock);\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/global.module.js","import {app} from \"./app.component\";\nimport {welcome} from \"./welcome.component\";\nimport {login} from \"./login.component\";\nimport {home} from \"./home.component\";\nimport {appState, homeState, loginState, welcomeState} from \"./app.states\";\n\nexport const MAIN_MODULE = angular.module('main', []);\n\nMAIN_MODULE.config(['$uiRouterProvider', function($uiRouter) {\n  // Enable tracing of each TRANSITION... (check the javascript console)\n  // This syntax `$trace.enable(1)` is an alternative to `$trace.enable(\"TRANSITION\")`.\n  // Besides \"TRANSITION\", you can also enable tracing for : \"RESOLVE\", \"HOOK\", \"INVOKE\", \"UIVIEW\", \"VIEWCONFIG\"\n  $uiRouter.trace.enable(1);\n\n  // If the user enters a URL that doesn't match any known URL (state), send them to `/welcome`\n  const $urlService = $uiRouter.urlService;\n  $urlService.rules.otherwise({ state: 'welcome' });\n\n  const $stateRegistry = $uiRouter.stateRegistry;\n  $stateRegistry.register(appState);\n  $stateRegistry.register(homeState);\n  $stateRegistry.register(loginState);\n  $stateRegistry.register(welcomeState);\n}]);\n\nMAIN_MODULE.component('app', app);\nMAIN_MODULE.component('welcome', welcome);\nMAIN_MODULE.component('login', login);\nMAIN_MODULE.component('home', home);\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/main.module.js","import {compose} from \"./compose.component\";\nimport {folderList} from \"./directives/folderList.component\";\nimport {message} from \"./message.component\";\nimport {messageList} from \"./messageList.component\";\nimport {mymessages} from \"./mymessages.component\";\nimport {messageTable} from \"./directives/messageTable.component\";\nimport {sortMessages} from \"./directives/sortMessages.directive\";\nimport {messageBody} from \"./filters/messageBody.filter\";\nimport {MessageListUI} from \"./services/messagesListUI.service\";\n\nimport {composeState, messageState, messageListState, mymessagesState} from \"./mymessages.states\";\n\nexport const MYMESSAGES_MODULE = angular.module('mymessages', []);\n\nMYMESSAGES_MODULE.directive('sortMessages', sortMessages);\n\nMYMESSAGES_MODULE.component('compose', compose);\nMYMESSAGES_MODULE.component('folderList', folderList);\nMYMESSAGES_MODULE.component('message', message);\nMYMESSAGES_MODULE.component('messageList', messageList);\nMYMESSAGES_MODULE.component('mymessages', mymessages);\nMYMESSAGES_MODULE.component('messageTable', messageTable);\n\nMYMESSAGES_MODULE.filter('messageBody', messageBody);\n\nMYMESSAGES_MODULE.service('MessageListUI', MessageListUI);\n\nMYMESSAGES_MODULE.config(['$stateRegistryProvider', function($stateRegistry) {\n  $stateRegistry.register(composeState);\n  $stateRegistry.register(messageState);\n  $stateRegistry.register(messageListState);\n  $stateRegistry.register(mymessagesState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.module.js","import {prefs} from \"./prefs.component\";\nimport {prefsState} from \"./prefs.states\";\n\nexport const PREFS_MODULE = angular.module('prefs', []);\n\nPREFS_MODULE.component('prefs', prefs);\n\nPREFS_MODULE.config(['$stateRegistryProvider', function ($stateRegistry) {\n  $stateRegistry.register(prefsState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.module.js","import * as angular from \"angular\";\n\nexport class DialogService {\n  constructor($document, $compile, $rootScope) {\n    let body = $document.find(\"body\");\n    let elem = angular.element(\"<div class='dialog' dialog='opts'></div>\");\n\n    this.confirm = (message, details = \"Are you sure?\", yesMsg = \"Yes\", noMsg = \"No\") => {\n      $compile(elem)(angular.extend($rootScope.$new(), {message, details, yesMsg, noMsg}));\n      body.append(elem);\n      return elem.data(\"promise\").finally(() => elem.removeClass('active').remove());\n    }\n  }\n}\nDialogService.$inject = ['$document', '$compile', '$rootScope'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/dialog.service.js","/**\n * The controller for the `app` component.\n */\nclass AuthedController {\n  constructor(AppConfig, AuthService, $state) {\n    this.AuthService = AuthService;\n    this.$state = $state;\n\n    this.emailAddress = AppConfig.emailAddress;\n    this.isAuthenticated = AuthService.isAuthenticated();\n  }\n\n  logout() {\n    let {AuthService, $state} = this;\n    AuthService.logout();\n    // Reload states after authentication change\n    return $state.go('welcome', {}, { reload: true });\n  }\n\n  isActive(glob) {\n    return this.$state.includes(glob);\n  }\n}\nAuthedController.$inject = ['AppConfig', 'AuthService', '$state'];\n\n/**\n * This is the main app component for an authenticated user.\n * \n * This component renders the outermost chrome (application header and tabs, the compose  and logout button)\n * It has a `ui-view` viewport for nested states to fill in.\n */\nexport const app = {\n  controller: AuthedController,\n  template: `\n    <div class=\"navheader\">\n      <ul ng-if=\"::$ctrl.isAuthenticated\" class=\"nav nav-tabs\">\n    \n        <li ui-sref-active=\"active\"> <a ui-sref=\"mymessages\" role=\"button\"> Messages </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"contacts\" role=\"button\"> Contacts </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"prefs\" role=\"button\"> Preferences </a> </li>\n    \n        <li class=\"navbar-right\">\n          <button class=\"btn btn-primary fa fa-home\" ui-sref=\"home\"></button>\n          <button style=\"margin-right: 15px;\" class=\"btn btn-primary\" ui-sref=\"mymessages.compose\"><i class=\"fa fa-envelope\"></i> New Message</button>\n        </li>\n    \n        <li class=\"navbar-text navbar-right logged-in-user\" style=\"margin: 0.5em 1.5em;\">\n          <div>\n            {{::$ctrl.emailAddress}} <i class=\"fa fa-chevron-down\"></i>\n            <div class=\"hoverdrop\">\n              <button class=\"btn btn-primary\" ng-click=\"$ctrl.logout()\">Log Out</button>\n            </div>\n          </div>\n        </li>\n    \n      </ul>\n    </div>\n    \n    <div ui-view></div>\n    <div ui-view=\"mymessages\" ng-show=\"$ctrl.isActive('mymessages.**')\"></div>\n    <div ui-view=\"contacts\" ng-show=\"$ctrl.isActive('contacts.**')\"></div>\n`\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/app.component.js","// This is a home component for authenticated users.\n// It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\nexport const home = {\n  template: `\n    <div class=\"home buttons\">\n      <button ui-sref=\"mymessages\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-envelope\"></i></h1>\n        <h1>Messages</h1>\n      </button>\n\n      <button ui-sref=\"contacts\" class=\"btn btn-primary\">\n      <h1><i class=\"fa fa-users\"></i></h1>\n      <h1>Contacts</h1>\n      </button>\n\n      <button ui-sref=\"prefs\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-cogs\"></i></h1>\n        <h1>Preferences</h1>\n      </button>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/home.component.js","/**\n * The controller for the `login` component\n *\n * The `login` method validates the credentials.\n * Then it sends the user back to the `returnTo` state, which is provided as a resolve data.\n */\nclass LoginController {\n  constructor(AppConfig, AuthService, $state) {\n    this.usernames = AuthService.usernames;\n\n    this.credentials = {\n      username: AppConfig.emailAddress,\n      password: 'password'\n    };\n\n    this.login = (credentials) => {\n      this.authenticating = true;\n\n      const returnToOriginalState = () => {\n        let state = this.returnTo.state();\n        let params = this.returnTo.params();\n        let options = Object.assign({}, this.returnTo.options(), { reload: true });\n        $state.go(state, params, options);\n      };\n\n      const showError = (errorMessage) =>\n          this.errorMessage = errorMessage;\n\n      AuthService.authenticate(credentials.username, credentials.password)\n          .then(returnToOriginalState)\n          .catch(showError)\n          .finally(() => this.authenticating = false);\n    }\n  }\n}\nLoginController.$inject = ['AppConfig', 'AuthService', '$state'];\n\n/**\n * This component renders a faux authentication UI\n *\n * It prompts for the username/password (and gives hints with bouncy arrows)\n * It shows errors if the authentication failed for any reason.\n */\nexport const login = {\n  bindings: { returnTo: '<' },\n\n  controller: LoginController,\n\n  template:  `\n    <div class=\"container\">\n      <div class=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\n        <h3>Log In</h3>\n        <p>(This login screen is for demonstration only... just pick a username, enter 'password' and click <b>\"Log in\"</b>)</p>\n        <hr>\n    \n        <div>\n          <label for=\"username\">Username:</label>\n          <select class=\"form-control\" name=\"username\" id=\"username\"\n            ng-model=\"$ctrl.credentials.username\" ng-options=\"username for username in $ctrl.usernames\"></select>\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 10em; height: 0\"\n              ng-hide=\"$ctrl.credentials.username\" class=\"fa fa-arrow-left bounce-horizontal\"> Choose </i>\n        </div>\n        <br>\n    \n        <div>\n          <label for=\"password\">Password:</label>\n          <input class=\"form-control\" type=\"password\" name=\"password\" ng-model=\"$ctrl.credentials.password\">\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 5em; height: 0\"\n              ng-hide=\"!$ctrl.credentials.username || $ctrl.credentials.password == 'password'\" class=\"fa fa-arrow-left bounce-horizontal\">\n            Enter '<b>password</b>' here\n          </i>\n        </div>\n    \n        <div ng-show=\"$ctrl.errorMessage\" class=\"well error\">{{ $ctrl.errorMessage }}</div>\n    \n        <hr>\n        <div>\n          <button class=\"btn btn-primary\" type=\"button\"\n              ng-disabled=\"$ctrl.authenticating\" ng-click=\"$ctrl.login($ctrl.credentials)\">\n            <i class=\"fa fa-spin fa-spinner\" ng-show=\"$ctrl.authenticating\"></i> <span>Log in</span>\n          </button>\n          <i ng-show=\"$ctrl.credentials.username && $ctrl.credentials.password == 'password'\" style=\"position: relative;\" class=\"fa fa-arrow-left bounce-horizontal\"> Click Me!</i>\n      </div>\n    </div>\n    `\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/login.component.js","export const welcome = {\n  template: `\n    <div class=\"container-fluid\">\n    \n      <h3>UI-Router Sample App</h3>\n    \n      <p>Welcome to the sample app!</p>\n      <p>This is a demonstration app intended to highlight some patterns that can be used within UI-Router.\n        These patterns should help you to to build cohesive, robust apps.  Additionally, this app uses state-vis\n        to show the tree of states, and a transition log visualizer.</p>\n    \n      <h4>App Overview</h4>\n      <p>\n        First, start exploring the application's functionality at a high level by activating\n        one of the three submodules: Messages, Contacts, or Preferences. If you are not already logged in,\n        you will be taken to an authentication screen (the authentication is fake; the password is \"password\")\n        <div>\n          <button class=\"btn btn-primary\" ui-sref=\"mymessages\"><i class=\"fa fa-envelope\"></i><span>Messages</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"contacts\"><i class=\"fa fa-users\"></i><span>Contacts</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"prefs\"><i class=\"fa fa-cogs\"></i><span>Preferences</span></button>\n        </div>\n      </p>\n    \n      <h4>Patterns and Recipes</h4>\n      <ul>\n        <li>Require Authentication</li>\n        <li>Previous State</li>\n        <li>Redirect Hook</li>\n        <li>Default Param Values</li>\n      </ul>\n    </div>`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/welcome.component.js","/** Some utility functions used by the application */\n\nexport const setProp = (obj, key, val) => { obj[key] = val; return obj; };\nexport const pushToArr = (array, item) => { array.push(item); return array; };\nexport const uniqReduce = (arr, item) => arr.indexOf(item) !== -1 ? arr : pushToArr(arr, item);\nexport const flattenReduce = (arr, item) => arr.concat(item);\nlet guidChar = (c) => c !== 'x' && c !== 'y' ? '-' : Math.floor(Math.random()*16).toString(16).toUpperCase();\nexport const guid = () => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\").map(guidChar).join(\"\");\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/util.js","import {ngmodule} from \"../bootstrap/ngmodule\";\n\n/** Google analytics */\n\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nga('create', 'UA-73329341-1', 'auto');\nga('send', 'pageview');\n\n\nngmodule.config(['$transitionsProvider', $transitionsProvider => {\n  $transitionsProvider.onBefore({}, $transition$ => {\n    let path = $transition$.treeChanges().to\n        .map(node=>node.state.self.url)\n        .filter(x => x != null && x !== '^')\n        .join('');\n\n    let vpv = (path) => ga('send', 'pageview', path);\n\n    let success = () => { vpv(path); };\n    let error = (err) => {\n      let errType = err && err.hasOwnProperty(\"type\") ? err.type : '_';\n      path = path.replace(/^\\//, \"\");\n      vpv(`/errors/${errType}/${path}`)\n    };\n\n    $transition$.promise.then(success, error);\n  })\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/ga.js","/**\n * This file is the main entry point for the entire app.\n *\n * If the application is being bundled, this is where the bundling process\n * starts.  If the application is being loaded by an es6 module loader, this\n * is the entry point.\n *\n * Point Webpack or SystemJS to this file.\n *\n * This module imports all the different parts of the application which registers them with angular.\n * - Submodules\n *   - States\n *   - Components\n *   - Directives\n *   - Services\n *   - Filters\n *   - Run and Config blocks\n *     - Transition Hooks\n * - 3rd party Libraries and angular1 module\n */\n\n\n// import all the app sub modules\n// Each module registers it states/services/components, with the `ngmodule`\nimport \"../global/global.module\";\nimport \"../main/main.module\";\nimport \"../contacts/contacts.module\";\nimport \"../mymessages/mymessages.module\";\nimport \"../prefs/prefs.module\";\n\n// Google analytics\nimport '../util/ga';\n\n\n\n// WEBPACK FOOTER //\n// ./app/bootstrap/bootstrap.js","/**\n * This file imports the third party library dependencies, then creates the angular module \"demo\"\n * and exports it.\n */\n// External dependencies\nimport * as angular from \"angular\";\nimport uiRouter from \"@uirouter/angularjs\";\nimport { StickyStatesPlugin } from '@uirouter/sticky-states';\nimport { DSRPlugin } from '@uirouter/dsr';\nimport { visualizer } from \"@uirouter/visualizer\";\nimport ocLazyLoad from \"oclazyload\";\n\nimport { MAIN_MODULE } from '../main/main.module';\nimport { GLOBAL_MODULE } from '../global/global.module';\nimport { MYMESSAGES_MODULE } from '../mymessages/mymessages.module';\nimport { PREFS_MODULE } from '../prefs/prefs.module';\n\n// Create the angular module \"demo\".\n//\n// Since it is exported, other parts of the application (in other files) can then import it and register things.\n// In bootstrap.js, the module is imported, and the components, services, and states are registered.\nexport const ngmodule = angular.module(\"demo\", [\n  uiRouter,\n  ocLazyLoad,\n  // CONTACTS_MODULE.name // lazy loaded below\n  MAIN_MODULE.name,\n  GLOBAL_MODULE.name,\n  MYMESSAGES_MODULE.name,\n  PREFS_MODULE.name,\n]);\n\nngmodule.config(['$uiRouterProvider', $uiRouter => {\n  $uiRouter.plugin(StickyStatesPlugin);\n  $uiRouter.plugin(DSRPlugin);\n  // Show the UI-Router Visualizer\n  visualizer($uiRouter);\n\n  // Future State (Placeholder) for the contacts module\n  const contactsFutureState = {\n    name: 'contacts.**',\n    url: '/contacts',\n    lazyLoad: function(transition) {\n      const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n      return System.import('../contacts/contacts.module').then((ngmod) => $ocLazyLoad.load(ngmod.CONTACTS_MODULE))\n    }\n  };\n\n  $uiRouter.stateRegistry.register(contactsFutureState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/bootstrap/ngmodule.js","/**\n * This component renders a read only view of the details for a single contact. \n */\nexport const contactDetail = {\n  bindings: { contact: '<' },\n\n  template: `\n    <div class=\"flex-h\">\n      <div class=\"details\">\n        <h3>{{$ctrl.contact.name.first}} {{$ctrl.contact.name.last}}</h3>\n        <div><label>Company</label><div>{{$ctrl.contact.company}}</div></div>\n        <div><label>Age</label><div>{{$ctrl.contact.age}}</div></div>\n        <div><label>Phone</label><div>{{$ctrl.contact.phone}}</div></div>\n        <div><label>Email</label><div>{{$ctrl.contact.email}}</div></div>\n        <div class=\"flex-h\">\n          <label>Address</label>\n          <div>{{$ctrl.contact.address.street}}<br>\n                {{$ctrl.contact.address.city}}, {{$ctrl.contact.address.state}} {{$ctrl.contact.address.zip}}\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"flex nogrow\">\n        <img ng-src=\"{{$ctrl.contact.picture}}\"/>\n      </div>\n    </div>\n`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactDetail.component.js","/**\n * This component renders a list of contacts.\n * \n * At the top is a \"new contact\" button.\n * Each list item is a clickable link to the `contacts.contact` details substate\n */\nexport const contactList = {\n  bindings: { contacts: '<' },\n\n  template: `\n    <ul class=\"selectlist list-unstyled flex nogrow\">\n      <li>\n        <!-- This link is a relative ui-sref to the contacts.new state. -->\n        <a ui-sref=\".new\">\n          <button class=\"btn btn-primary\">\n            <i class=\"fa fa-pencil\"></i><span>New Contact</span>\n          </button>\n        </a>\n      </li>\n  \n      <li>&nbsp;</li>\n  \n      <!-- Highlight the selected contact:\n          When the current state matches the ui-sref's state (and its parameters)\n          ui-sref-active applies the 'selected' class to the li element -->\n      <li ng-repeat=\"contact in $ctrl.contacts\" ui-sref-active=\"selected\">\n        <a ui-sref=\".contact({contactId: contact._id})\">\n          {{contact.name.first}} {{contact.name.last}}\n        </a>\n      </li>\n    </ul>\n`\n};\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactList.component.js","/**\n * This component renders details for a single contact\n * \n * A button messages the contact by linking to `mymessages.compose` state passing the email as a state parameter.\n * Another button edits the contact by linking to `contacts.contact.edit` state.\n */\n\nexport const contactView = {\n  bindings: {contact: '<'},\n\n  template: `\n    <div class=\"contact\">\n    \n      <contact-detail contact=\"$ctrl.contact\"></contact-detail>\n      \n      <!-- This button has an ui-sref to the mymessages.compose state. The ui-sref provides the mymessages.compose\n           state with an non-url parameter, which is used as the initial message model -->\n      <button class=\"btn btn-primary\" ui-sref=\"mymessages.compose({ message: { to: $ctrl.contact.email } })\">\n        <i class=\"fa fa-envelope\"></i><span>Message</span>\n      </button>\n    \n      <!-- This button has a relative ui-sref to the contacts.contact.edit state. -->\n      <button class=\"btn btn-primary\" ui-sref=\".edit\">\n        <i class=\"fa fa-pencil\"></i><span>Edit Contact</span>\n      </button>\n      \n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactView.component.js","/**\n * This component renders the contacts submodule.\n * \n * On the left is the list of contacts.\n * On the right is the ui-view viewport where contact details appear.\n */\nexport const contacts = {\n  bindings: { contacts: '<' },\n\n  template: `\n    <div class=\"my-contacts flex-h\">\n    \n      <contact-list contacts=\"$ctrl.contacts\" class=\"flex nogrow\"></contact-list>\n    \n      <div ui-view>\n        <!-- This default content is displayed when the ui-view is not filled in by a child state -->\n        <h4 style=\"margin: 1em 2em;\">Select a contact</h4>\n      </div>\n      \n    </div>`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.component.js","import \"../global/dialog.service\";\n\n/**\n * This state displays the contact list.\n * It also provides a nested ui-view (viewport) for child states to fill in.\n *\n * The contacts are fetched using a resolve.\n */\nexport const contactsState = {\n  parent: 'app', // declares that 'contacts' is a child of 'app'\n  name: \"contacts\",\n  url: \"/contacts\",\n  resolve: {\n    // Resolve all the contacts.  The resolved contacts are injected into the controller.\n    contacts: ['Contacts', (Contacts) => Contacts.all()]\n  },\n  data: { requiresAuth: true },\n  deepStateRedirect: true,\n  sticky: true,\n  views: {\n    contacts: 'contacts'\n  },\n};\n\n/**\n * This state displays a single contact.\n * The contact to display is fetched using a resolve, based on the `contactId` parameter.\n */\nexport const viewContactState = {\n  name: 'contacts.contact',\n  url: '/:contactId',\n  resolve: {\n    // Resolve the contact, based on the contactId parameter value.\n    // The resolved contact is provided to the contactComponent's contact binding\n    contact: ['Contacts', '$transition$', (Contacts, $transition$) => Contacts.get($transition$.params().contactId)]\n  },\n  component: 'contactView'\n};\n\n\n/**\n * This state allows a user to edit a contact\n *\n * The contact data to edit is injected from the parent state's resolve.\n *\n * This state uses view targeting to replace the parent ui-view (which would normally be filled\n * by 'contacts.contact') with the edit contact template/controller\n */\nexport const editContactState = {\n  name: 'contacts.contact.edit',\n  url: '/edit',\n  views: {\n    // Relatively target the grand-parent-state's $default (unnamed) ui-view\n    // This could also have been written using ui-view@state addressing: $default@contacts\n    // Or, this could also have been written using absolute ui-view addressing: !$default.$default.$default\n    '^.^.$default': {\n      bindings: { pristineContact: \"contact\" },\n      component: 'editContact'\n    }\n  }\n};\n\n/**\n * This state allows a user to create a new contact\n *\n * The contact data to edit is injected into the component from the parent state's resolve.\n */\nexport const newContactState = {\n  name: 'contacts.new',\n  url: '/new',\n  component: 'editContact'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.states.js","/**\n * The controller for the editContact component\n *\n * This component is used by both `contacts.contact.edit` and `contacts.new` states.\n *\n * The component makes a copy of the contqct data for editing.\n * The new copy and original (pristine) copy are used to determine if the contact is \"dirty\" or not.\n * If the user navigates to some other state while the contact is \"dirty\", the `uiCanExit` component\n * hook asks the user to confirm navigation away, losing any edits.\n *\n * The Delete Contact button is wired to the `remove` method, which:\n * - asks for confirmation from the user\n * - deletes the resource from REST API\n * - navigates back to the contacts grandparent state using relative addressing `^.^`\n *   the `reload: true` option re-fetches the contacts list from the server\n *\n * The Save Contact button is wired to the `save` method which:\n * - saves the REST resource (PUT or POST, depending)\n * - navigates back to the parent state using relative addressing `^`.\n *   when editing an existing contact, this returns to the `contacts.contact` \"view contact\" state\n *   when creating a new contact, this returns to the `contacts` list.\n *   the `reload: true` option re-fetches the contacts resolve data from the server\n */\nclass EditContactController {\n  constructor($state, DialogService, Contacts) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Contacts = Contacts;\n  }\n\n  $onInit() {\n    // Make an editable copy of the pristineContact\n    this.contact = angular.copy(this.pristineContact);\n  }\n\n  uiCanExit() {\n    if (this.canExit || angular.equals(this.contact, this.pristineContact)) {\n      return true;\n    }\n\n    let message = 'You have unsaved changes to this contact.';\n    let question = 'Navigate away and lose changes?';\n    return this.DialogService.confirm(message, question);\n  }\n\n  /** Ask for confirmation, then delete the contact, then go to the grandparent state ('contacts') */\n  remove(contact) {\n    this.DialogService.confirm(`Delete contact: ${contact.name.first} ${contact.name.last}`)\n        .then(() => this.Contacts.remove(contact))\n        .then(() => this.canExit = true)\n        .then(() => this.$state.go(\"^.^\", null, { reload: true }));\n  }\n\n  /** Save the contact, then go to the grandparent state ('contacts') */\n  save(contact) {\n    this.Contacts.save(contact)\n        .then(() => this.canExit = true)\n        .then(() => this.$state.go(\"^\", null, { reload: true }));\n  }\n}\nEditContactController.$inject = ['$state', 'DialogService', 'Contacts'];\n\n/**\n * This component edits a single contact.\n *\n * Editable fields are bound to the contact.\n * A button cancels editing and returns to the contact view by linking to the parent state using `^` relative addressing.\n * Another button saves the contact.\n * A third button deletes the bcontact.\n */\nexport const editContact =  {\n  bindings: { pristineContact: '<' },\n\n  controller: EditContactController,\n\n  template: `\n    <div class=\"contact\">\n      <div class=\"details\">\n        <div><label>First</label>   <input type=\"text\" ng-model=\"$ctrl.contact.name.first\"></div>\n        <div><label>Last</label>    <input type=\"text\" ng-model=\"$ctrl.contact.name.last\"></div>\n        <div><label>Company</label> <input type=\"text\" ng-model=\"$ctrl.contact.company\"></div>\n        <div><label>Age</label>     <input type=\"text\" ng-model=\"$ctrl.contact.age\"></div>\n        <div><label>Phone</label>   <input type=\"text\" ng-model=\"$ctrl.contact.phone\"></div>\n        <div><label>Email</label>   <input type=\"text\" ng-model=\"$ctrl.contact.email\"></div>\n        <div><label>Street</label>  <input type=\"text\" ng-model=\"$ctrl.contact.address.street\"></div>\n        <div><label>City</label>    <input type=\"text\" ng-model=\"$ctrl.contact.address.city\"> </div>\n        <div><label>State</label>   <input type=\"text\" ng-model=\"$ctrl.contact.address.state\"></div>\n        <div><label>Zip</label>     <input type=\"text\" ng-model=\"$ctrl.contact.address.zip\"></div>\n        <div><label>Image</label>   <input type=\"text\" ng-model=\"$ctrl.contact.picture\"></div>\n      </div>\n    \n      <hr>\n    \n      <div>\n        <!-- This button's ui-sref relatively targets the parent state, i.e., contacts.contact -->\n        <button class=\"btn btn-primary\" ui-sref=\"^\"><i class=\"fa fa-close\"></i><span>Cancel</span></button>\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.contact)\"><i class=\"fa fa-save\"></i><span>Save</span></button>\n        <button class=\"btn btn-primary\" ng-click=\"$ctrl.remove($ctrl.contact)\"><i class=\"fa fa-close\"></i><span>Delete</span></button>\n      </div>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/editContact.component.js","/**\n * This service stores and retrieves user preferences in session storage\n */\nexport class AppConfig {\n  constructor() {\n    this.sort = '+date';\n    this.emailAddress = undefined;\n    this.restDelay = 100;\n    this.load();\n  }\n\n  load() {\n    try {\n      return angular.extend(this, angular.fromJson(sessionStorage.getItem(\"appConfig\")))\n    } catch (Error) { }\n\n    return this;\n  }\n\n  save() {\n    sessionStorage.setItem(\"appConfig\", angular.toJson(angular.extend({}, this)));\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/global/appConfig.service.js","/**\n * This service emulates an Authentication Service.\n */\nexport class AuthService {\n  constructor(AppConfig, $q, $timeout) {\n    this.AppConfig = AppConfig;\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.usernames = ['myself@angular.dev', 'devgal@angular.dev', 'devguy@angular.dev'];\n  }\n\n  /**\n   * Returns true if the user is currently authenticated, else false\n   */\n  isAuthenticated() {\n    return !!this.AppConfig.emailAddress;\n  }\n\n  /**\n   * Fake authentication function that returns a promise that is either resolved or rejected.\n   *\n   * Given a username and password, checks that the username matches one of the known\n   * usernames (this.usernames), and that the password matches 'password'.\n   *\n   * Delays 800ms to simulate an async REST API delay.\n   */\n  authenticate(username, password) {\n    let { $timeout, $q, AppConfig } = this;\n\n    // checks if the username is one of the known usernames, and the password is 'password'\n    const checkCredentials = () => $q((resolve, reject) => {\n      var validUsername = this.usernames.indexOf(username) !== -1;\n      var validPassword = password === 'password';\n\n      return (validUsername && validPassword) ? resolve(username) : reject(\"Invalid username or password\");\n    });\n\n    return $timeout(checkCredentials, 800)\n        .then((authenticatedUser) => {\n          AppConfig.emailAddress = authenticatedUser;\n          AppConfig.save()\n        });\n  }\n\n  /** Logs the current user out */\n  logout() {\n    this.AppConfig.emailAddress = undefined;\n    this.AppConfig.save();\n  }\n}\nAuthService.$inject = ['AppConfig', '$q', '$timeout'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/auth.service.js","import {SessionStorage} from \"../util/sessionStorage\"\n\n/**\n * Fake REST Services (Contacts, Folders, Messages) used in the mymessages submodule.\n *\n * Each of these APIs have:\n *\n * .all()\n * .search(exampleItem)\n * .get(id)\n * .save(item)\n * .post(item)\n * .put(item)\n * .remove(item)\n *\n * See ../util/sessionStorage.js for more details, if curious\n */\n\n/** A fake Contacts REST client API */\nexport class Contacts extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    // http://beta.json-generator.com/api/json/get/V1g6UwwGx\n    super($http, $timeout, $q, \"contacts\", \"data/contacts.json\", AppConfig);\n  }\n}\nContacts.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Folders REST client API */\nexport class Folders extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    super($http, $timeout, $q, 'folders', 'data/folders.json', AppConfig);\n  }\n}\nFolders.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n/** A fake Messages REST client API */\nexport class Messages extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    // http://beta.json-generator.com/api/json/get/VJl5GbIze\n    super($http, $timeout, $q, 'messages', 'data/messages.json', AppConfig);\n  }\n\n  byFolder(folder) {\n    let searchObject = { folder: folder._id };\n    let toFromAttr = [\"drafts\", \"sent\"].indexOf(folder._id) !== -1 ? \"from\" : \"to\";\n    searchObject[toFromAttr] = this.AppConfig.emailAddress;\n    return this.search(searchObject);\n  }\n}\nMessages.$inject = ['$http', '$timeout', '$q', 'AppConfig'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/dataSources.service.js","dialog.$inject = ['$timeout', '$q'];\nexport function dialog($timeout, $q) {\n  return {\n    link: (scope, elem) => {\n      $timeout(() => elem.addClass('active'));\n      elem.data('promise', $q((resolve, reject) => {\n        scope.yes = () => resolve(true);\n        scope.no = () => reject(false);\n      }));\n    },\n    template: `\n      <div class=\"backdrop\"></div>\n      <div class='wrapper'>\n        <div class=\"content\">\n          <h4 ng-show=\"message\">{{message}}</h4>\n          <div ng-show=\"details\">{{details}}</div>\n    \n          <div style=\"padding-top: 1em;\">\n            <button class=\"btn btn-primary\" ng-click=\"yes()\">{{yesMsg}}</button>\n            <button class=\"btn btn-primary\" ng-click=\"no()\">{{noMsg}}</button>\n          </div>\n        </div>\n      </div>\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/global/dialog.directive.js","/**\n * This run block registers a Transition Hook which protects\n * routes that requires authentication.\n *\n * This hook redirects to /login when both:\n * - The user is not authenticated\n * - The user is navigating to a state that requires authentication\n */\nauthHookRunBlock.$inject = ['$transitions', 'AuthService'];\nexport function authHookRunBlock($transitions, AuthService) {\n  // Matches if the destination state's data property has a truthy 'requiresAuth' property\n  let requiresAuthCriteria = {\n    to: (state) => state.data && state.data.requiresAuth\n  };\n\n  // Function that returns a redirect for the current transition to the login state\n  // if the user is not currently authenticated (according to the AuthService)\n\n  let redirectToLogin = (transition) => {\n    let AuthService = transition.injector().get('AuthService');\n    let $state = transition.router.stateService;\n    if (!AuthService.isAuthenticated()) {\n      return $state.target('login', undefined, { location: false });\n    }\n  };\n\n  // Register the \"requires auth\" hook with the TransitionsService\n  $transitions.onBefore(requiresAuthCriteria, redirectToLogin, {priority: 10});\n}\n\n\n// WEBPACK FOOTER //\n// ./app/global/requiresAuth.hook.js","import {appTemplate, appController} from \"./app.component\";\nimport {welcomeTemplate, welcomeController} from \"./welcome.component\";\nimport {homeTemplate} from \"./home.component\";\nimport {loginTemplate, loginController} from \"./login.component\";\n\n/**\n * This is the parent state for the entire application.\n *\n * This state's primary purposes are:\n * 1) Shows the outermost chrome (including the navigation and logout for authenticated users)\n * 2) Provide a viewport (ui-view) for a substate to plug into\n */\nexport const appState = {\n  name: 'app',\n  redirectTo: 'welcome',\n  component: 'app'\n};\n\n/**\n * This is the 'welcome' state.  It is the default state (as defined by app.js) if no other state\n * can be matched to the URL.\n */\nexport const welcomeState = {\n  parent: 'app',\n  name: 'welcome',\n  url: '/welcome',\n  component: 'welcome'\n};\n\n\n/**\n * This is a home screen for authenticated users.\n *\n * It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\n */\nexport const homeState = {\n  parent: 'app',\n  name: 'home',\n  url: '/home',\n  component: 'home'\n};\n\n\n/**\n * This is the login state.  It is activated when the user navigates to /login, or if a unauthenticated\n * user attempts to access a protected state (or substate) which requires authentication. (see routerhooks/requiresAuth.js)\n *\n * It shows a fake login dialog and prompts the user to authenticate.  Once the user authenticates, it then\n * reactivates the state that the user originally came from.\n */\nexport const loginState = {\n  parent: 'app',\n  name: 'login',\n  url: '/login',\n  component: 'login',\n  resolve: { returnTo: returnTo }\n};\n\n/**\n * A resolve function for 'login' state which figures out what state to return to, after a successful login.\n *\n * If the user was initially redirected to login state (due to the requiresAuth redirect), then return the toState/params\n * they were redirected from.  Otherwise, if they transitioned directly, return the fromState/params.  Otherwise\n * return the main \"home\" state.\n */\nreturnTo.$inject = ['$transition$'];\nfunction returnTo($transition$) {\n  if ($transition$.redirectedFrom() != null) {\n    // The user was redirected to the login state (e.g., via the requiresAuth hook when trying to activate contacts)\n    // Return to the original attempted target state (e.g., contacts)\n    return $transition$.redirectedFrom().targetState();\n  }\n\n  let $state = $transition$.router.stateService;\n\n  // The user was not redirected to the login state; they directly activated the login state somehow.\n  // Return them to the state they came from.\n  if ($transition$.from().name !== '') {\n    return $state.target($transition$.from(), $transition$.params(\"from\"));\n  }\n\n  // If the fromState's name is empty, then this was the initial transition. Just return them to the home state\n  return $state.target('home');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/main/app.states.js","/**\n * The controller for the Compose component\n */\nclass ComposeController {\n  constructor($state, DialogService, AppConfig, Messages) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.AppConfig = AppConfig;\n    this.Messages = Messages;\n  }\n\n  /**\n   * Create our message's model using the current user's email address as 'message.from'\n   * Then extend it with all the properties from (non-url) state parameter 'message'.\n   * Keep two copies: the editable one and the original one.\n   * These copies are used to check if the message is dirty.\n   */\n  $onInit() {\n    this.pristineMessage = angular.extend({from: this.AppConfig.emailAddress}, this.$stateParams.message);\n    this.message = angular.copy(this.pristineMessage);\n  }\n\n  /**\n   * Checks if the edited copy and the pristine copy are identical when the state is changing.\n   * If they are not identical, the allows the user to confirm navigating away without saving.\n   */\n  uiCanExit() {\n    if (this.canExit || angular.equals(this.pristineMessage, this.message)) {\n        return true;\n    }\n\n    var message = 'You have not saved this message.';\n    var question = 'Navigate away and lose changes?';\n    return this.DialogService.confirm(message, question, \"Yes\", \"No\");\n  }\n\n  /**\n   * Navigates back to the previous state.\n   *\n   * - Checks the $transition$ which activated this controller for a 'from state' that isn't the implicit root state.\n   * - If there is no previous state (because the user deep-linked in, etc), then go to 'mymessages.messagelist'\n   */\n  gotoPreviousState() {\n    let $transition$ = this.$transition$;\n    let hasPrevious = !!$transition$.from().name;\n    let state = hasPrevious ? $transition$.from() : \"mymessages.messagelist\";\n    let params = hasPrevious ? $transition$.params(\"from\") : {};\n    this.$state.go(state, params);\n  };\n\n  /** \"Send\" the message (save to the 'sent' folder), and then go to the previous state */\n  send(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'sent'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  };\n\n  /** Save the message to the 'drafts' folder, and then go to the previous state */\n  save(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'drafts'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  }\n}\nComposeController.$inject = ['$state', 'DialogService', 'AppConfig', 'Messages'];\n\n/**\n * This component composes a message\n *\n * The message might be new, a saved draft, or a reply/forward.\n * A Cancel button discards the new message and returns to the previous state.\n * A Save As Draft button saves the message to the \"drafts\" folder.\n * A Send button sends the message\n */\nexport const compose = {\n  bindings: { $stateParams: '<', $transition$: '<' },\n\n  controller: ComposeController,\n\n  template: `\n    <div class=\"compose\">\n      <div class=\"header\">\n        <div class=\"flex-h\"> <label>Recipient</label> <input type=\"text\" id=\"to\" name=\"to\" ng-model=\"$ctrl.message.to\"> </div>\n        <div class=\"flex-h\"> <label>Subject</label> <input type=\"text\" id=\"subject\" name=\"subject\" ng-model=\"$ctrl.message.subject\"> </div>\n      </div>\n    \n      <div class=\"body\">\n        <textarea name=\"body\" id=\"body\" ng-model=\"$ctrl.message.body\" cols=\"30\" rows=\"20\"></textarea>\n        \n        <div class=\"buttons\">\n          <!-- Clicking this button brings the user back to the state they came from (previous state) -->\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.gotoPreviousState()\"><i class=\"fa fa-times-circle-o\"></i><span>Cancel</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.message)\"><i class=\"fa fa-save\"></i><span>Save as Draft</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.send($ctrl.message)\"><i class=\"fa fa-paper-plane-o\"></i><span>Send</span></button>\n        </div>\n      </div>\n    </div>\n`\n};\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/compose.component.js","/**\n * Renders a list of folders\n */\nexport const folderList = {\n  bindings: {folders: '<'},\n\n  template: `\n    <!-- Renders a list of folders -->\n    <div class=\"folderlist\">\n      <ul class=\"selectlist list-unstyled\">\n  \n        <!-- Highlight the selected folder:\n            When the current state matches the ui-sref's state (and its parameters)\n            ui-sref-active applies the 'selected' class to the li element -->\n        <li class=\"folder\" ui-sref-active=\"selected\" ng-repeat=\"folder in $ctrl.folders\" >\n          <!-- This ui-sref is a relative link to the 'mymessages.messagelist' substate. It provides the\n              'folderId' parameter value from the current folder's .id property -->\n          <a ui-sref=\".messagelist({folderId: folder._id})\"><i class=\"fa\"></i>{{folder._id}}</a>\n        </li>\n      </ul>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/folderList.component.js","/**\n * A component that displays a folder of messages as a table\n * \n * If a row is clicked, the details of the message is shown using a relative ui-sref to `.message`.\n * \n * ui-sref-active is used to highlight the selected row.\n * \n * Shows/hides specific columns based on the `columns` input binding.\n */\nexport const messageTable = {\n  bindings: { columns: '<', messages: '<' },\n\n  controller: messageTableController,\n\n  template: `\n    <table>\n      <thead>\n        <tr>\n          <td ng-if=\"::$ctrl.colVisible('read')\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\"     sort-messages=\"from\">Sender</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\"       sort-messages=\"to\">Recipient</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\"  sort-messages=\"subject\">Subject</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\"     sort-messages=\"date\">Date</td>\n        </tr>\n      </thead>\n  \n      <tbody>\n        <tr ng-repeat=\"message in $ctrl.messages | orderBy: $ctrl.AppConfig.sort track by message._id\"\n            ui-sref=\".message({messageId: message._id})\" ui-sref-active=\"active\">\n          <td ng-if=\"::$ctrl.colVisible('read')\"><i class=\"fa fa-circle\" style=\"font-size: 50%\" ng-show=\"!message.read\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\">{{ message.from }}</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\">{{ message.to }}</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\">{{ message.subject }}</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\">{{ message.date | date: \"yyyy-MM-dd\" }}</td>\n        </tr>\n      </tbody>\n  \n    </table>\n`};\n\nmessageTableController.$inject = ['AppConfig'];\nfunction messageTableController(AppConfig) {\n  this.AppConfig = AppConfig;\n  this.colVisible = (name) => this.columns.indexOf(name) !== -1;\n}\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/messageTable.component.js","/**\n * A directive (for a table header) which changes the app's sort order\n */\nsortMessages.$inject = ['AppConfig'];\nexport function sortMessages(AppConfig) {\n  return {\n    restrict: 'A',\n    link: function(scope, elem, attrs) {\n      let col = attrs.sortMessages;\n      if (!col) return;\n      let chevron = angular.element(\"<i style='padding-left: 0.25em' class='fa'></i>\");\n      elem.append(chevron);\n\n      elem.on(\"click\", (evt) => AppConfig.sort = (AppConfig.sort === `+${col}`) ? `-${col}` : `+${col}`);\n      scope.$watch(() => AppConfig.sort, (newVal) => {\n        chevron.toggleClass(\"fa-sort-asc\", newVal == `+${col}`);\n        chevron.toggleClass(\"fa-sort-desc\", newVal == `-${col}`);\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/sortMessages.directive.js","/** Angular filter to format fake emails as HTML*/\nmessageBody.$inject = ['$sce'];\nexport function messageBody($sce) {\n  return (msgText = '') => $sce.trustAsHtml(msgText.split(/\\n/).map(p => `<p>${p}</p>`).join('\\n'));\n}\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/filters/messageBody.filter.js","import {setProp} from \"../util/util\";\n\n/** Helper function to prefix a message with \"fwd: \" or \"re: \" */\nconst prefixSubject = (prefix, message) => prefix + message.subject;\n/** Helper function which quotes an email message */\nconst quoteMessage = (message) => `\n\n\n\n---------------------------------------\nOriginal message:\nFrom: ${message.from}\nDate: ${message.date}\nSubject: ${message.subject}\n\n${message.body}`;\n\n/** Helper function to make a response message object */\nconst makeResponseMsg = (subjectPrefix, origMsg) => ({\n  from: origMsg.to,\n  to: origMsg.from,\n  subject: prefixSubject(subjectPrefix, origMsg),\n  body: quoteMessage(origMsg)\n});\n\n\n/**\n * The controller for the Message component\n */\nclass MessageController {\n  constructor($state, DialogService, Messages) {\n    this.$state = $state;\n    this.DialogService = DialogService;\n    this.Messages = Messages;\n  }\n\n  /**\n   * When the user views a message, mark it as read and save (PUT) the resource.\n   *\n   * Apply the available actions for the message, depending on the folder the message belongs to.\n   */\n  $onInit() {\n    this.message.read = true;\n    this.Messages.put(this.message);\n\n    this.actions = this.folder.actions.reduce((obj, action) => setProp(obj, action, true), {});\n  }\n\n  /**\n   * Compose a new message as a reply to this one\n   */\n  reply(message) {\n    let replyMsg = makeResponseMsg(\"Re: \", message);\n    this.$state.go('mymessages.compose', { message: replyMsg });\n  };\n\n  /**\n   * Compose a new message as a forward of this one.\n   */\n  forward(message) {\n    let fwdMsg = makeResponseMsg(\"Fwd: \", message);\n    delete fwdMsg.to;\n    this.$state.go('mymessages.compose', { message: fwdMsg });\n  };\n\n  /**\n   * Continue composing this (draft) message\n   */\n  editDraft(message) {\n    this.$state.go('mymessages.compose', { message: message });\n  };\n\n  /**\n   * Delete this message.\n   *\n   * - confirm deletion\n   * - delete the message\n   * - determine which message should be active\n   * - show that message\n   */\n  remove(message) {\n    let nextMessageId = this.nextMessageGetter(message._id);\n    let nextState = nextMessageId ? 'mymessages.messagelist.message' : 'mymessages.messagelist';\n    let params = { messageId: nextMessageId };\n\n    this.DialogService.confirm(\"Delete?\", undefined)\n        .then(() => this.Messages.remove(message))\n        .then(() => this.$state.go(nextState, params, { reload: 'mymessages.messagelist' }));\n  };\n}\nMessageController.$inject = ['$state', 'DialogService', 'Messages'];\n\n/**\n * This component renders a single message\n *\n * Buttons perform actions related to the message.\n * Buttons are shown/hidden based on the folder's context.\n * For instance, a \"draft\" message can be edited, but can't be replied to.\n */\nexport const message = {\n  bindings: { folder: '<', message: '<', nextMessageGetter: '<' },\n\n  controller: MessageController,\n\n  template: `\n    <div class=\"message\">\n    \n      <div class=\"header\">\n        <div>\n          <h4>{{$ctrl.message.subject}}</h4>\n          <h5>{{$ctrl.message.from}} <i class=\"fa fa-long-arrow-right\"></i> {{$ctrl.message.to}}</h5>\n        </div>\n    \n        <div class=\"line2\">\n          <div>{{$ctrl.message.date | date: 'longDate'}} {{$ctrl.message.date | date: 'mediumTime'}}</div>\n          <div>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.edit\" ng-click=\"$ctrl.editDraft($ctrl.message)\"><i class=\"fa fa-pencil\"></i> <span>Edit Draft</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.reply\" ng-click=\"$ctrl.reply($ctrl.message)\"><i class=\"fa fa-reply\"></i> <span>Reply</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.forward\" ng-click=\"$ctrl.forward($ctrl.message)\"><i class=\"fa fa-forward\" ></i> <span>Forward</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.delete\" ng-click=\"$ctrl.remove($ctrl.message)\"><i class=\"fa fa-close\"></i> <span>Delete</span></button>\n          </div>\n        </div>\n      </div>\n    \n      <!-- Pass the raw (plain text) message body through the messageBody filter to format slightly nicer. -->\n      <div class=\"body\" ng-bind-html=\"::$ctrl.message.body | messageBody\"></div>\n    </div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/message.component.js","/**\n * This component renders a list of messages using the `messageTable` component\n */\nexport const messageList = {\n  bindings: { folder: '<', messages: '<' },\n  template: `\n    <div class=\"messages\">\n      <message-table columns=\"$ctrl.folder.columns\" messages=\"$ctrl.messages\"></message-table>\n    </div>\n`};\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/messageList.component.js","/**\n * The main mymessages component.\n *\n * Renders a list of folders, and has two viewports:\n * - messageList: filled with the list of messages for a folder\n * - messagecontent: filled with the contents of a single message.\n */\nexport const mymessages = {\n  bindings: {folders: '<'},\n\n  template: `\n    <div class=\"my-messages\">\n    \n      <!-- Show message folders -->\n      <folder-list folders=\"$ctrl.folders\"></folder-list>\n    \n      <!-- A named view for the list of messages in this folder.  This will be  filled in by the 'mymessages.messagelist' child state -->\n      <div ui-view=\"messagelist\" class=\"messagelist\"> </div>\n    \n    </div>\n    \n    <!-- A named ui-view for a message's contents.  The 'mymessages.messagelist.message' grandchild state plugs into this ui-view -->\n    <div ui-view=\"messagecontent\"></div>\n`};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.component.js","/**\n * The mymessages state. This is the main state for the mymessages submodule.\n *\n * This state shows the list of folders for the current user. It retrieves the folders from the\n * Folders service.  If a user navigates directly to this state, the state redirects to the 'mymessages.messagelist'.\n */\nexport const mymessagesState = {\n  parent: 'app',\n  name: \"mymessages\",\n  url: \"/mymessages\",\n  resolve: {\n    // All the folders are fetched from the Folders service\n    folders: ['Folders', (Folders) => Folders.all()]\n  },\n  views: {\n    mymessages: 'mymessages'\n  },\n  // Mark this state as requiring authentication.  See ../routerhooks/requiresAuth.js.\n  data: { requiresAuth: true },\n  // If mymessages state is directly activated, redirect the transition to the most recent\n  // child state that was previously activated, or 'mymessages.messagelist' (by default)\n  deepStateRedirect: {\n    default: { state: 'mymessages.messagelist' }\n  },\n  sticky: true,\n};\n\n\n/**\n * This state shows the contents (a message list) of a single folder\n */\nexport const messageListState = {\n  name: 'mymessages.messagelist',\n  url: '/:folderId',\n  // The folderId parameter is part of the URL.  This params block sets 'inbox' as the default value.\n  // If no parameter value for folderId is provided on the transition, then it will be defaulted to 'inbox'\n  params: {folderId: \"inbox\"},\n  resolve: {\n    // Fetch the current folder from the Folders service, using the folderId parameter\n    folder: ['Folders', '$stateParams', (Folders, $stateParams) => Folders.get($stateParams.folderId)],\n\n    // The resolved folder object (from the resolve above) is injected into this resolve\n    // The list of message for the folder are fetched from the Messages service\n    messages: ['Messages', 'folder', (Messages, folder) => Messages.byFolder(folder)]\n  },\n  views: {\n    // This targets the \"messagelist\" named ui-view added to the DOM in the parent state 'mymessages'\n    messagelist: 'messageList'\n  }\n};\n\n\n/**\n * This state shows the contents of a single message.\n * It also has UI to reply, forward, delete, or edit an existing draft.\n */\nexport const messageState = {\n  name: 'mymessages.messagelist.message',\n  url: '/:messageId',\n  resolve: {\n    // Fetch the message from the Messages service using the messageId parameter\n    message: ['Messages', '$stateParams', (Messages, $stateParams) => Messages.get($stateParams.messageId)],\n    // Provide the component with a function it can query that returns the closest message id\n    nextMessageGetter: ['MessageListUI', 'messages', (MessageListUI, messages) => MessageListUI.proximalMessageId.bind(MessageListUI, messages)]\n  },\n  views: {\n    // Relatively target the parent-state's parent-state's 'messagecontent' ui-view\n    // This could also have been written using ui-view@state addressing: 'messagecontent@mymessages'\n    // Or, this could also have been written using absolute ui-view addressing: '!$default.mymessages.messagecontent'\n    \"^.^.messagecontent\": 'message'\n  }\n};\n\n\n/**\n * This state allows the user to compose a new message, edit a drafted message, send a message,\n * or save an unsent message as a draft.\n *\n * This state uses view-targeting to take over the ui-view that would normally be filled by the 'mymessages' state.\n */\nexport const composeState = {\n  name: 'mymessages.compose',\n  url: '/compose',\n  // Declares that this state has a 'message' parameter, that defaults to an empty object.\n  // Note the parameter does not appear in the URL.\n  params: {\n    message: {}\n  },\n  views: {\n    // Absolutely targets the ui-view named 'mymessages' (which is nested inside an unnamed ui-view) with the 'compose' component.\n    // Absolute targeting finds the nested ui-view in the DOM, using view names.\n    '!$default.mymessages': 'compose'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.states.js","/** Provides services related to a message list */\nexport class MessageListUI {\n  constructor($filter, AppConfig) {\n    this.$filter = $filter;\n    this.AppConfig = AppConfig;\n  }\n\n  /** This is a UI helper which finds the nearest messageId in the messages list to the messageId parameter */\n  proximalMessageId(messages, messageId) {\n    let sorted = this.$filter(\"orderBy\")(messages, this.AppConfig.sort);\n    let idx = sorted.findIndex(msg => msg._id === messageId);\n    var proximalIdx = sorted.length > idx + 1 ? idx + 1 : idx - 1;\n    return proximalIdx >= 0 ? sorted[proximalIdx]._id : undefined;\n  }\n}\nMessageListUI.$inject = ['$filter', 'AppConfig'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/services/messagesListUI.service.js","/**\n * The controller for the prefs component.\n */\nclass PrefsController {\n  constructor(AppConfig) {\n    this.AppConfig = AppConfig\n  }\n\n  $onInit() {\n    this.prefs = {\n      restDelay: this.AppConfig.restDelay\n    }\n  }\n\n  /** Clear out the session storage */\n  reset() {\n    sessionStorage.clear();\n    document.location.reload(true);\n  }\n\n  /** After saving preferences to session storage, reload the entire application */\n  savePrefs() {\n    angular.extend(this.AppConfig, { restDelay: this.prefs.restDelay }).save();\n    document.location.reload(true);\n  }\n}\nPrefsController.$inject = ['AppConfig'];\n\n/**\n * A component which shows and updates app preferences\n */\nexport const prefs = {\n  controller: PrefsController,\n\n  template: `\n    <div>\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.reset()\"><i class=\"fa fa-recycle\"></i> <span>Reset All Data</span></button>\n    </div>\n    \n    <div>\n      <label for=\"restDelay\">Simulated REST API delay (ms)</label>\n      <input type=\"text\" name=\"restDelay\" ng-model=\"$ctrl.prefs.restDelay\">\n      <button class=\"btn btn-primary\" ng-click=\"$ctrl.savePrefs()\">Save</button>\n    </div>\n`};\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.component.js","/**\n * This state allows the user to set their application preferences\n */\nexport const prefsState = {\n  parent: 'app',\n  name: 'prefs',\n  url: '/prefs',\n  component: 'prefs',\n  // Mark this state as requiring authentication.  See ../global/requiresAuth.hook.js.\n  data: { requiresAuth: true }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.states.js","import {pushToArr, guid, setProp} from \"./util\";\n\n/**\n * This class simulates a RESTful resource, but the API calls fetch data from\n * Session Storage instead of an HTTP call.\n *\n * Once configured, it loads the initial (pristine) data from the URL provided (using HTTP).\n * It exposes GET/PUT/POST/DELETE-like API that operates on the data.  All the data is also\n * stored in Session Storage.  If any data is modified in memory, session storage is updated.\n * If the browser is refreshed, the SessionStorage object will try to fetch the existing data from\n * the session, before falling back to re-fetching the initial data using HTTP.\n *\n * For an example, please see dataSources.js\n */\nexport class SessionStorage {\n  /**\n   * Creates a new SessionStorage object\n   *\n   * @param $http Pass in the $http service\n   * @param $timeout Pass in the $timeout service\n   * @param $q Pass in the $q service\n   * @param sessionStorageKey The session storage key. The data will be stored in browser's session storage under this key.\n   * @param sourceUrl The url that contains the initial data.\n   * @param AppConfig Pass in the AppConfig object\n   */\n  constructor($http, $timeout, $q, sessionStorageKey, sourceUrl, AppConfig) {\n    let data, fromSession = sessionStorage.getItem(sessionStorageKey);\n    // A promise for *all* of the data.\n    this._data = undefined;\n\n    // For each data object, the _idProp defines which property has that object's unique identifier\n    this._idProp = \"_id\";\n\n    // A basic triple-equals equality checker for two values\n    this._eqFn = (l, r) => l[this._idProp] === r[this._idProp];\n\n    // Services required to implement the fake REST API\n    this.$q = $q;\n    this.$timeout = $timeout;\n    this.sessionStorageKey = sessionStorageKey;\n    this.AppConfig = AppConfig; // Used to get the REST latency simulator,\n\n    if (fromSession) {\n      try {\n        // Try to parse the existing data from the Session Storage API\n        data = JSON.parse(fromSession);\n      } catch (e) {\n        console.log(\"Unable to parse session messages, retrieving intial data.\");\n      }\n    }\n\n    let stripHashKey = (obj) =>\n        setProp(obj, '$$hashKey', undefined);\n\n    // Create a promise for the data; Either the existing data from session storage, or the initial data via $http request\n    this._data = (data ? $q.resolve(data) : $http.get(sourceUrl).then(resp => resp.data))\n        .then(this._commit.bind(this))\n        .then(() => JSON.parse(sessionStorage.getItem(sessionStorageKey)))\n        .then(array => array.map(stripHashKey));\n\n  }\n\n  /** Saves all the data back to the session storage */\n  _commit(data) {\n    sessionStorage.setItem(this.sessionStorageKey, JSON.stringify(data));\n    return this.$q.resolve(data);\n  }\n\n  /** Helper which simulates a delay, then provides the `thenFn` with the data */\n  all(thenFn) {\n    return this.$timeout(() => this._data, this.AppConfig.restDelay).then(thenFn);\n  }\n\n  /** Given a sample item, returns a promise for all the data for items which have the same properties as the sample */\n  search(exampleItem) {\n    let contains = (search, inString) =>\n        (\"\" + inString).indexOf(\"\" + search) !== -1;\n    let matchesExample = (example, item) =>\n        Object.keys(example).reduce((memo, key) => memo && contains(example[key], item[key]), true);\n    return this.all(items =>\n        items.filter(matchesExample.bind(null, exampleItem)));\n  }\n\n  /** Returns a promise for the item with the given identifier */\n  get(id) {\n    return this.all(items =>\n        items.find(item => item[this._idProp] === id));\n  }\n\n  /** Returns a promise to save the item.  It delegates to put() or post() if the object has or does not have an identifier set */\n  save(item) {\n    return item[this._idProp] ? this.put(item) : this.post(item);\n  }\n\n  /** Returns a promise to save (POST) a new item.   The item's identifier is auto-assigned. */\n  post(item) {\n    item[this._idProp] = guid();\n    return this.all(items => pushToArr(items, item)).then(this._commit.bind(this));\n  }\n\n  /** Returns a promise to save (PUT) an existing item. */\n  put(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items[idx] = item;\n      return this._commit(items).then(() => item);\n    });\n  }\n\n  /** Returns a promise to remove (DELETE) an item. */\n  remove(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items.splice(idx, 1);\n      return this._commit(items).then(() => item);\n    });\n  }\n}\nSessionStorage.$inject = ['$http', '$timeout', '$q', 'sessionStorageKey', 'sourceUrl', 'AppConfig'];\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/sessionStorage.js"],"sourceRoot":""}